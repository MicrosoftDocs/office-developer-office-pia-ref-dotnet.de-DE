<Type Name="_CommandBarButton" FullName="Microsoft.Office.Core._CommandBarButton">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c6bfd8d29e589e579f5eae507ab43562f407648f" />
    <Meta Name="ms.sourcegitcommit" Value="f41bc3cdd2c00b9a51a4340ac823a9e309633924" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20659862" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface _CommandBarButton : Microsoft.Office.Core.CommandBarControl" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _CommandBarButton implements class Microsoft.Office.Core.CommandBarControl" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Core._CommandBarButton" />
  <TypeSignature Language="VB.NET" Value="Public Interface _CommandBarButton&#xA;Implements CommandBarControl" />
  <TypeSignature Language="C++ CLI" Value="public interface class _CommandBarButton : Microsoft::Office::Core::CommandBarControl" />
  <AssemblyInfo>
    <AssemblyName>office</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Office.Core.CommandBarControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000C030E-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4304)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="7bdff-101">Stellt ein Schaltflächen-Steuerelement auf einer Befehlsleiste dar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7bdff-101">Represents a button control on a command bar.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="7bdff-102">
        <para>Verwenden von <b>Steuerelementen</b>(<paramref name="index" />), wobei <paramref name="index" /> ist die Indexnummer des Steuerelements, um ein <b>CommandBarButton</b> -Objekt zurückzugeben. (Der <see cref="P:Microsoft.Office.Core._CommandBarButton.Type" /> -Eigenschaft des Steuerelements muss <b>MsoControlButton</b>sein.)</para>
        <para>Können Sie auch die <see cref="M:Microsoft.Office.Core._CommandBars.FindControl(System.Object,System.Object,System.Object,System.Object)" /> Methode, um ein <b>CommandBarButton</b> -Objekt zurückzugeben.</para>
        <para />
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="7bdff-102">
          <para>Use <b>Controls</b>(<paramref name="index" />), where <paramref name="index" /> is the index number of the control, to return a <b>CommandBarButton</b> object. (The <see cref="P:Microsoft.Office.Core._CommandBarButton.Type" /> property of the control must be <b>msoControlButton</b>.)</para>
          <para>You can also use the <see cref="M:Microsoft.Office.Core._CommandBars.FindControl(System.Object,System.Object,System.Object,System.Object)" /> method to return a <b>CommandBarButton</b> object.</para>
          <para />
        </span>
      </span>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="accChild">
      <MemberSignature Language="C#" Value="public object accChild[object varChild] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object accChild(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.accChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property accChild(varChild As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ accChild[System::Object ^] { System::Object ^ get(System::Object ^ varChild); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core.CommandBarControl.accChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-5002)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-5002)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="varChild" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="varChild">To be added.</param>
        <summary>
          <span data-ttu-id="7bdff-103">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-103">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="accChildCount">
      <MemberSignature Language="C#" Value="public int accChildCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 accChildCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.accChildCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property accChildCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int accChildCount { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core.CommandBarControl.accChildCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-5001)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-5001)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-104">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-104">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="accDefaultAction">
      <MemberSignature Language="C#" Value="public string accDefaultAction[object varChild] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string accDefaultAction(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.accDefaultAction(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property accDefaultAction(Optional varChild As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ accDefaultAction[System::Object ^] { System::String ^ get(System::Object ^ varChild); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core.CommandBarControl.accDefaultAction(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-5013)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-5013)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="varChild" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="varChild">To be added.</param>
        <summary>
          <span data-ttu-id="7bdff-105">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-105">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="accDescription">
      <MemberSignature Language="C#" Value="public string accDescription[object varChild] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string accDescription(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.accDescription(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property accDescription(Optional varChild As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ accDescription[System::Object ^] { System::String ^ get(System::Object ^ varChild); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core.CommandBarControl.accDescription(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-5005)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-5005)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="varChild" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="varChild">To be added.</param>
        <summary>
          <span data-ttu-id="7bdff-106">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-106">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="accDoDefaultAction">
      <MemberSignature Language="C#" Value="public void accDoDefaultAction (object varChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void accDoDefaultAction([in]object varChild) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core._CommandBarButton.accDoDefaultAction(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub accDoDefaultAction (Optional varChild As Object)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.Core.CommandBarControl.accDoDefaultAction(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-5018)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="varChild" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="varChild">To be added.</param>
        <summary>
          <span data-ttu-id="7bdff-107">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-107">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="accFocus">
      <MemberSignature Language="C#" Value="public object accFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object accFocus" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.accFocus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property accFocus As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ accFocus { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core.CommandBarControl.accFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-5011)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-5011)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-108">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-108">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="accHelp">
      <MemberSignature Language="C#" Value="public string accHelp[object varChild] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string accHelp(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.accHelp(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property accHelp(Optional varChild As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ accHelp[System::Object ^] { System::String ^ get(System::Object ^ varChild); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core.CommandBarControl.accHelp(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-5008)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-5008)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="varChild" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="varChild">To be added.</param>
        <summary>
          <span data-ttu-id="7bdff-109">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-109">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="accHelpTopic">
      <MemberSignature Language="C#" Value="public int accHelpTopic[out string pszHelpFile, object varChild] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 accHelpTopic(string, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.accHelpTopic(System.String@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property accHelpTopic(ByRef pszHelpFile As String, Optional varChild As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int accHelpTopic[System::String ^ %, System::Object ^] { int get([Runtime::InteropServices::Out] System::String ^ % pszHelpFile, System::Object ^ varChild); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core.CommandBarControl.accHelpTopic(System.String@,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-5009)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-5009)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pszHelpFile" Type="System.String&amp;" RefType="out" />
        <Parameter Name="varChild" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pszHelpFile">To be added.</param>
        <param name="varChild">To be added.</param>
        <summary>
          <span data-ttu-id="7bdff-110">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-110">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="accHitTest">
      <MemberSignature Language="C#" Value="public object accHitTest (int xLeft, int yTop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object accHitTest([in]int32 xLeft, [in]int32 yTop) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core._CommandBarButton.accHitTest(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function accHitTest (xLeft As Integer, yTop As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ accHitTest(int xLeft, int yTop);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.Core.CommandBarControl.accHitTest(System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-5017)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xLeft" Type="System.Int32" />
        <Parameter Name="yTop" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="xLeft">To be added.</param>
        <param name="yTop">To be added.</param>
        <summary>
          <span data-ttu-id="7bdff-111">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-111">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="accKeyboardShortcut">
      <MemberSignature Language="C#" Value="public string accKeyboardShortcut[object varChild] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string accKeyboardShortcut(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.accKeyboardShortcut(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property accKeyboardShortcut(Optional varChild As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ accKeyboardShortcut[System::Object ^] { System::String ^ get(System::Object ^ varChild); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core.CommandBarControl.accKeyboardShortcut(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-5010)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-5010)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="varChild" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="varChild">To be added.</param>
        <summary>
          <span data-ttu-id="7bdff-112">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-112">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="accLocation">
      <MemberSignature Language="C#" Value="public void accLocation (out int pxLeft, out int pyTop, out int pcxWidth, out int pcyHeight, object varChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void accLocation([out] int32&amp; pxLeft, [out] int32&amp; pyTop, [out] int32&amp; pcxWidth, [out] int32&amp; pcyHeight, [in]object varChild) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core._CommandBarButton.accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub accLocation (ByRef pxLeft As Integer, ByRef pyTop As Integer, ByRef pcxWidth As Integer, ByRef pcyHeight As Integer, Optional varChild As Object)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.Core.CommandBarControl.accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-5015)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pxLeft" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="pyTop" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="pcxWidth" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="pcyHeight" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="varChild" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pxLeft">To be added.</param>
        <param name="pyTop">To be added.</param>
        <param name="pcxWidth">To be added.</param>
        <param name="pcyHeight">To be added.</param>
        <param name="varChild">To be added.</param>
        <summary>
          <span data-ttu-id="7bdff-113">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-113">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="accName">
      <MemberSignature Language="C#" Value="public string accName[object varChild] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string accName(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.accName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Property accName(Optional varChild As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ accName[System::Object ^] { System::String ^ get(System::Object ^ varChild); void set(System::Object ^ varChild, System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core.CommandBarControl.accName(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-5003)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-5003)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-5003)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="varChild" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="varChild">To be added.</param>
        <summary>
          <span data-ttu-id="7bdff-114">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-114">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="accNavigate">
      <MemberSignature Language="C#" Value="public object accNavigate (int navDir, object varStart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object accNavigate([in]int32 navDir, [in]object varStart) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core._CommandBarButton.accNavigate(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function accNavigate (navDir As Integer, Optional varStart As Object) As Object" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.Core.CommandBarControl.accNavigate(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-5016)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navDir" Type="System.Int32" />
        <Parameter Name="varStart" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navDir">To be added.</param>
        <param name="varStart">To be added.</param>
        <summary>
          <span data-ttu-id="7bdff-115">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-115">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="accParent">
      <MemberSignature Language="C#" Value="public object accParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object accParent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.accParent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property accParent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ accParent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core.CommandBarControl.accParent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-5000)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-5000)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-116">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-116">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="accRole">
      <MemberSignature Language="C#" Value="public object accRole[object varChild] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object accRole(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.accRole(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property accRole(Optional varChild As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ accRole[System::Object ^] { System::Object ^ get(System::Object ^ varChild); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core.CommandBarControl.accRole(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-5006)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-5006)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="varChild" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="varChild">To be added.</param>
        <summary>
          <span data-ttu-id="7bdff-117">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-117">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="accSelect">
      <MemberSignature Language="C#" Value="public void accSelect (int flagsSelect, object varChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void accSelect([in]int32 flagsSelect, [in]object varChild) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core._CommandBarButton.accSelect(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub accSelect (flagsSelect As Integer, Optional varChild As Object)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.Core.CommandBarControl.accSelect(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-5014)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flagsSelect" Type="System.Int32" />
        <Parameter Name="varChild" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="flagsSelect">To be added.</param>
        <param name="varChild">To be added.</param>
        <summary>
          <span data-ttu-id="7bdff-118">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-118">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="accSelection">
      <MemberSignature Language="C#" Value="public object accSelection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object accSelection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.accSelection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property accSelection As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ accSelection { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core.CommandBarControl.accSelection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-5012)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-5012)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-119">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-119">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="accState">
      <MemberSignature Language="C#" Value="public object accState[object varChild] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object accState(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.accState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property accState(Optional varChild As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ accState[System::Object ^] { System::Object ^ get(System::Object ^ varChild); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core.CommandBarControl.accState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-5007)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-5007)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="varChild" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="varChild">To be added.</param>
        <summary>
          <span data-ttu-id="7bdff-120">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-120">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="accValue">
      <MemberSignature Language="C#" Value="public string accValue[object varChild] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string accValue(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.accValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Property accValue(Optional varChild As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ accValue[System::Object ^] { System::String ^ get(System::Object ^ varChild); void set(System::Object ^ varChild, System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core.CommandBarControl.accValue(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-5004)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-5004)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-5004)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="varChild" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="varChild">To be added.</param>
        <summary>
          <span data-ttu-id="7bdff-121">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-121">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public object Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Application { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core.CommandBarControl.Application</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809344)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809344)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-122">Gibt ein <b>Application</b> -Objekt, das die Container-Anwendung für das Objekt darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-122">Returns an <b>Application</b> object that represents the container application for the object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGroup">
      <MemberSignature Language="C#" Value="public bool BeginGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BeginGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.BeginGroup" />
      <MemberSignature Language="VB.NET" Value="Public Property BeginGroup As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BeginGroup { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core.CommandBarControl.BeginGroup</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610874880)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610874880)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1610874880)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-123">Zurückgeben oder festlegen ein Werts, das angibt, ob das angegebene Befehlsleisten-Steuerelement am Anfang einer Gruppe von Steuerelementen auf der Befehlsleiste angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-123">Returns or sets a value that indicates if the specified command bar control appears at the beginning of a group of controls on the command bar.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuiltIn">
      <MemberSignature Language="C#" Value="public bool BuiltIn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BuiltIn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.BuiltIn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BuiltIn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BuiltIn { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core.CommandBarControl.BuiltIn</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610874882)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610874882)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-124">Gibt einen Wert, der angibt, ob das angegebene Befehlsleisten-Steuerelement ein integriertes Steuerelement der containeranwendung handelt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-124">Returns a value that indicates if the specified command bar control is a built-in control of the container application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="7bdff-125">
            <para>Gibt <b>true,</b> Wenn der angegebenen Befehlsleiste oder Befehlsleisten-Steuerelement eine integrierte Befehlsleiste oder das Steuerelement der Container-Anwendung und <b>False</b> ist, wenn es sich um eine benutzerdefinierte Befehlsleiste oder das Steuerelement ist, oder ist eine integrierte Steuerelement, dessen <see cref="P:Microsoft.Office.Core.CommandBar.BuiltIn" /> Eigenschaft festgelegt wurde .</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-125">
              <para>Returns <b>True</b> if the specified command bar or command bar control is a built-in command bar or control of the container application, and <b>False</b> if it's a custom command bar or control, or if it's a built-in control whose <see cref="P:Microsoft.Office.Core.CommandBar.BuiltIn" /> property has been set.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BuiltInFace">
      <MemberSignature Language="C#" Value="public bool BuiltInFace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BuiltInFace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.BuiltInFace" />
      <MemberSignature Language="VB.NET" Value="Public Property BuiltInFace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BuiltInFace { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610940416)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610940416)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1610940416)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-126">Zurückgeben oder festlegen ein Werts, das angibt, ob die Oberfläche der Schaltflächensteuerelement einer Befehlsleiste die ursprüngliche integrierte Oberfläche ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-126">Returns or sets a value that indicates if the face of a command bar button control is its original built-in face.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="7bdff-127">
            <para>Diese Eigenschaft kann nur auf <b>True</b>festgelegt werden, wodurch die Oberfläche auf das integrierte Symbol zurückgesetzt wird.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-127">
              <para>This property can only be set to <b>True</b>, which will reset the face to the built-in face.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core.CommandBarControl.Caption</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610874883)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610874883)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1610874883)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-128">Zurückgeben oder festlegen den Beschriftungstext für ein Befehlsleisten-Steuerelement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-128">Returns or sets the caption text for a command bar control.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="7bdff-129">
            <para>Beschriftung für ein Steuerelement wird auch als Standard-QuickInfo angezeigt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-129">
              <para>A control's caption is also displayed as its default ScreenTip.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Control">
      <MemberSignature Language="C#" Value="public object Control { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Control" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.Control" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Control As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Control { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core.CommandBarControl.Control</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610874885)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610874885)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-130">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-130">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CommandBarControl Copy (object Bar, object Before);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Core.CommandBarControl Copy([in]object Bar, [in]object Before) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core._CommandBarButton.Copy(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy (Optional Bar As Object, Optional Before As Object) As CommandBarControl" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.Core.CommandBarControl.Copy(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610874886)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CommandBarControl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Bar" Type="System.Object" />
        <Parameter Name="Before" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Bar">
          <span data-ttu-id="7bdff-131">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-131">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="7bdff-132">Eine Zahl, die die Position für das neue Steuerelement auf der angegebenen Befehlsleiste angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-132">A number that indicates the position for the new control on the command bar.</span>
          </span>
          <span data-ttu-id="7bdff-133">Das neue Steuerelement wird vor dem Steuerelement eingefügt, das sich an dieser Position befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-133">The new control will be inserted before the control at this position.</span>
          </span>
          <span data-ttu-id="7bdff-134">Wenn dieses Argument ausgelassen wird, wird das Element an das Ende der Befehlsleiste kopiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-134">If this argument is omitted, the control is copied to the end of the command bar.</span>
          </span>
        </param>
        <param name="Before">
          <span data-ttu-id="7bdff-135">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-135">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="7bdff-136">Ein <see cref="T:Microsoft.Office.Core.CommandBar" /> -Objekt, das die Ziel-Befehlsleiste darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-136">A <see cref="T:Microsoft.Office.Core.CommandBar" /> object that represents the destination command bar.</span>
          </span>
          <span data-ttu-id="7bdff-137">Wenn dieses Argument ausgelassen wird, wird das Steuerelement der Befehlsleiste kopiert, in dem das Steuerelement bereits vorhanden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-137">If this argument is omitted, the control is copied to the command bar where the control already exists.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7bdff-138">Kopiert ein Befehlsleisten-Steuerelement in eine vorhandene Befehlsleiste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-138">Copies a command bar control to an existing command bar.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyFace">
      <MemberSignature Language="C#" Value="public void CopyFace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFace() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core._CommandBarButton.CopyFace" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyFace ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyFace();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610940418)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-139">Kopiert die Oberfläche eines Schaltflächen-Steuerelements der Befehlsleiste in die Zwischenablage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-139">Copies the face of a command bar button control to the Clipboard.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="7bdff-140">
            <para>Verwendung der <see cref="M:Microsoft.Office.Core._CommandBarButton.PasteFace" /> -Methode, um den Inhalt der Zwischenablage in eine Schaltflächenoberseite einzufügen.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-140">
              <para>Use the <see cref="M:Microsoft.Office.Core._CommandBarButton.PasteFace" /> method to paste the contents of the Clipboard onto a button face.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public int Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Creator { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core.CommandBarControl.Creator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809345)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809345)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-141">Gibt einen Wert, der die Anwendung angibt, in der das angegebene Objekt erstellt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-141">Returns a value that indicates the application in which the specified object was created.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="7bdff-142">
            <para>Wenn das angegebene Objekt in Microsoft Word erstellt wurde, gibt diese Eigenschaft "1297307460" zurück, die die Zeichenfolge "MSWD"; darstellt Wenn in Microsoft Excel erstellt, gibt diese Eigenschaft "1480803660" zurück. Dieser Wert kann auch durch die Konstante <b>WdCreatorCode</b> in Word oder <b>xlCreatorCode Wert</b> in Excel dargestellt werden.</para>
            <para>Die <b>Creator</b> -Eigenschaft wurde in erster Linie auf dem Macintosh verwendet werden, in dem jede Anwendung einen Erstellercode aus vier Zeichen verfügt über entwickelt. Beispielsweise hat Microsoft Word den Erstellercode MSWD. Weitere Informationen zu dieser Eigenschaft finden Sie in der Sprachreferenzhilfe Lieferumfang von Microsoft Office Macintosh Edition.</para>
            <para>Die <b>Creator</b> -Eigenschaft gibt immer den numerischen Bezeichner für die aktive Anwendung zurück, genau wie die <b>Application</b> -Eigenschaft den Namen der aktiven Anwendung immer in Form einer Zeichenfolge zurückgibt. Verwenden Sie die <b>Eigenschaften CreatedBy</b> -Eigenschaft von der <see cref="T:Microsoft.Office.Core.SharedWorkspaceFile" />, <see cref="T:Microsoft.Office.Core.SharedWorkspaceFolder" />, <see cref="T:Microsoft.Office.Core.SharedWorkspaceLink" />, und <see cref="T:Microsoft.Office.Core.SharedWorkspaceTask" /> -Objekten, die den Namen der Person zurückzugeben, die diese Objekte erstellt hat. Verwenden Sie Dokumenteigenschaften, um Informationen zu den Autoren von Office-Dokumenten zurückzugeben.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-142">
              <para>If the specified object was created in Microsoft Word, this property returns 1297307460, which represents the string "MSWD"; if created in Microsoft Excel, this property returns 1480803660. This value can also be represented by the constant <b>wdCreatorCode</b> in Word, or <b>xlCreatorCode</b> in Excel.</para>
              <para>The <b>Creator</b> property was primarily designed to be used on the Macintosh, where each application has a four-character creator code. For example, Microsoft Word has the creator code MSWD. For additional information about this property, consult the language reference Help included with Microsoft Office Macintosh Edition.</para>
              <para>The <b>Creator</b> property always returns the numeric identifier for the active application, just as the <b>Application</b> property always returns the name of the active application in string form. Use the <b>CreatedBy</b> property of the <see cref="T:Microsoft.Office.Core.SharedWorkspaceFile" />, <see cref="T:Microsoft.Office.Core.SharedWorkspaceFolder" />, <see cref="T:Microsoft.Office.Core.SharedWorkspaceLink" />, and <see cref="T:Microsoft.Office.Core.SharedWorkspaceTask" /> objects to return the name of the individual who created those objects. Use document properties to return information about the authors of Office documents.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (object Temporary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete([in]object Temporary) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core._CommandBarButton.Delete(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (Optional Temporary As Object)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.Core.CommandBarControl.Delete(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610874887)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Temporary" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Temporary">
          <span data-ttu-id="7bdff-143">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-143">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="7bdff-144">
            <b>True</b>, wenn das Steuerelement für die aktuelle Sitzung zu löschen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-144">
              <b>True</b> to delete the control for the current session.</span>
          </span>
          <span data-ttu-id="7bdff-145">Das Steuerelement wird von die Anwendung in der nächsten Sitzung erneut angezeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-145">The application will display the control again in the next session.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7bdff-146">Löscht das angegebene Objekt aus der Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-146">Deletes the specified object from its collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DescriptionText">
      <MemberSignature Language="C#" Value="public string DescriptionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DescriptionText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.DescriptionText" />
      <MemberSignature Language="VB.NET" Value="Public Property DescriptionText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DescriptionText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core.CommandBarControl.DescriptionText</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610874888)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610874888)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1610874888)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-147">Gibt zurück oder legt die Beschreibung für ein Befehlsleisten-Steuerelement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-147">Returns or sets the description for a command bar control.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="7bdff-148">
            <para>Die Beschreibung wird dem Benutzer nicht angezeigt, aber es kann zum Dokumentieren des Verhaltens des Steuerelements für andere Entwickler hilfreich sein.</para>
            <para>Diese Eigenschaft wird für die aktive Hilfe auf dem Macintosh verwendet.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-148">
              <para>The description is not displayed to the user, but it can be useful for documenting the behavior of the control for other developers.</para>
              <para>This property is used for Balloon Help on the Macintosh.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core.CommandBarControl.Enabled</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610874890)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610874890)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1610874890)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-149">Zurückgeben oder festlegen ein Werts, das angibt, ob das angegebene Befehlsleisten-Steuerelement aktiviert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-149">Returns or sets a value that indicates if the specified command bar control is enabled.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="7bdff-150">
            <para>Wenn Sie die <b>Enabled</b> -Eigenschaft auf <b>True</b>festlegen, bestimmt die Anwendung den Status des Befehlsleisten-Steuerelements; Festlegen der Steuerelementvorlage auf <b>false festgelegt</b> , wird das Steuerelement deaktiviert werden erzwingen.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-150">
              <para>If you set the <b>Enabled</b> property to <b>True</b>, the application determines the state of the command bar control; setting it to <b>False</b> will force the control to be disabled.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Execute() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core._CommandBarButton.Execute" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Execute();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.Core.CommandBarControl.Execute</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610874892)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-151">Führt die Prozedur oder den integrierten Befehl aus, das angegebene Befehlsleisten-Steuerelement zugewiesen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-151">Runs the procedure or built-in command assigned to the specified command bar control.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="7bdff-152">
            <para>Verwenden Sie bei benutzerdefinierten Steuerelementen der <see cref="P:Microsoft.Office.Core._CommandBarButton.OnAction" /> -Eigenschaft auf die Prozedur ausgeführt werden soll.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-152">
              <para>For custom controls, use the <see cref="P:Microsoft.Office.Core._CommandBarButton.OnAction" /> property to specify the procedure to be run.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FaceId">
      <MemberSignature Language="C#" Value="public int FaceId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FaceId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.FaceId" />
      <MemberSignature Language="VB.NET" Value="Public Property FaceId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FaceId { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610940419)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610940419)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1610940419)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-153">Zurückgeben oder festlegen die ID-Nummer für die Oberfläche der Schaltflächensteuerelement einer Befehlsleiste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-153">Returns or sets the ID number for the face of a command bar button control.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="7bdff-154">
            <para>Die <b>FaceId</b> -Eigenschaft bestimmt das Aussehen, nicht die Funktion einer Befehlsleistenschaltfläche. </para>
            <para>Der <see cref="P:Microsoft.Office.Core.CommandBarControl.Id" /> -Eigenschaft des der <see cref="T:Microsoft.Office.Core.CommandBarControl" /> Objekt bestimmt die Funktion der Schaltfläche.</para>
            <para>Der Wert der <b>FaceId</b> -Eigenschaft für eine Befehlsleisten-Schaltfläche mit einer benutzerdefinierten Oberfläche lautet 0 (null).</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-154">
              <para>The <b>FaceId</b> property dictates the look, not the function, of a command bar button. </para>
              <para>The <see cref="P:Microsoft.Office.Core.CommandBarControl.Id" /> property of the <see cref="T:Microsoft.Office.Core.CommandBarControl" /> object determines the function of the button.</para>
              <para>The value of the <b>FaceId</b> property for a command bar button with a custom face is 0 (zero).</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public int Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Height" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Height { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core.CommandBarControl.Height</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610874893)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610874893)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1610874893)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-155">Zurückgeben oder festlegen die Höhe des Steuerelements auf einer Befehlsleiste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-155">Returns or sets the height of a command bar control.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpContextId">
      <MemberSignature Language="C#" Value="public int HelpContextId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HelpContextId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.HelpContextId" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpContextId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int HelpContextId { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core.CommandBarControl.HelpContextId</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610874895)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610874895)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1610874895)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-156">Zurückgeben oder festlegen die Hilfe Kontext-ID für das Hilfethema, das Befehlsleisten-Steuerelement zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-156">Returns or sets the Help context ID number for the Help topic attached to the command bar control.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="7bdff-157">
            <para>Sie müssen auch festlegen, um diese Eigenschaft verwenden zu können, die <see cref="P:Microsoft.Office.Core._CommandBarButton.HelpFile" /> Eigenschaft. Die Themen der Onlinehilfe reagieren Sie auf UMSCHALT + F1.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-157">
              <para>To use this property, you must also set the <see cref="P:Microsoft.Office.Core._CommandBarButton.HelpFile" /> property. Help topics respond to SHIFT+F1.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpFile">
      <MemberSignature Language="C#" Value="public string HelpFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpFile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.HelpFile" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HelpFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core.CommandBarControl.HelpFile</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610874897)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610874897)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1610874897)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-158">Zurückgeben oder Festlegen der Dateiname für das Hilfethema, das Befehlsleisten-Steuerelement zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-158">Returns or sets the file name for the Help topic attached to the command bar control.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="7bdff-159">
            <para>Sie müssen auch festlegen, um diese Eigenschaft verwenden zu können, die <see cref="P:Microsoft.Office.Core._CommandBarButton.HelpContextId" /> Eigenschaft. Hilfethemen mit der Tastenkombination UMSCHALT + F1.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-159">
              <para>To use this property, you must also set the <see cref="P:Microsoft.Office.Core._CommandBarButton.HelpContextId" /> property. Help topics respond to the user pressing SHIFT+F1.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HyperlinkType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoCommandBarButtonHyperlinkType HyperlinkType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoCommandBarButtonHyperlinkType HyperlinkType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.HyperlinkType" />
      <MemberSignature Language="VB.NET" Value="Public Property HyperlinkType As MsoCommandBarButtonHyperlinkType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoCommandBarButtonHyperlinkType HyperlinkType { Microsoft::Office::Core::MsoCommandBarButtonHyperlinkType get(); void set(Microsoft::Office::Core::MsoCommandBarButtonHyperlinkType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610940428)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610940428)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1610940428)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoCommandBarButtonHyperlinkType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-160">Gibt zurück oder legt den Typ des Hyperlinks, die die angegebenen Befehlsleisten-Schaltfläche zugeordnet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-160">Returns or sets the type of hyperlink associated with the specified command bar button.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public int Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Id" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Id { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core.CommandBarControl.Id</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610874899)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610874899)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-161">Gibt die ID für ein integriertes Befehlsleisten-Steuerelement zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-161">Returns the ID for a built-in command bar control.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="7bdff-162">
            <para>ID des Steuerelements bestimmt die integrierte Aktion für dieses Steuerelement. Der Wert der <b>Id</b> -Eigenschaft für alle benutzerdefinierten Steuerelemente ist 1.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-162">
              <para>A control's ID determines the built-in action for that control. The value of the <b>Id</b> property for all custom controls is 1.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core.CommandBarControl.Index</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610874900)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610874900)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-163">Gibt einen Wert, der die Indexnummer für ein Objekt in der Auflistung angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-163">Returns a value that indicates the index number for an object in the collection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="7bdff-164">
            <para>Die Position des ersten Befehlsleisten-Steuerelements ist 1. Trennzeichen werden nicht gezählt, der <see cref="T:Microsoft.Office.Core.CommandBarControls" /> Auflistung.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-164">
              <para>The position of the first command bar control is 1. Separators are not counted in the <see cref="T:Microsoft.Office.Core.CommandBarControls" /> collection.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceId">
      <MemberSignature Language="C#" Value="public int InstanceId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InstanceId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.InstanceId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstanceId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int InstanceId { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core.CommandBarControl.InstanceId</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610874901)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610874901)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-165">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-165">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceIdPtr">
      <MemberSignature Language="C#" Value="public object InstanceIdPtr { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object InstanceIdPtr" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.InstanceIdPtr" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstanceIdPtr As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ InstanceIdPtr { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610940434)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610940434)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-166">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-166">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPriorityDropped">
      <MemberSignature Language="C#" Value="public bool IsPriorityDropped { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPriorityDropped" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.IsPriorityDropped" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPriorityDropped As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPriorityDropped { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core.CommandBarControl.IsPriorityDropped</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610874925)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610874925)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-167">Gibt einen Wert, der angibt, ob das Steuerelement aus dem Menü oder Symbolleiste Verwendungsstatistiken und Platzgründen basierend derzeit angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-167">Returns a value that indicates if the control is currently dropped from the menu or toolbar based on usage statistics and layout space.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="7bdff-168">
            <para>Beachten Sie, dass der zurückgegebene Wert nicht die Sichtbarkeit des Steuerelements, als Satz von darstellt der <see cref="P:Microsoft.Office.Core._CommandBarButton.Visible" /> Eigenschaft. Ein Steuerelement für das <b>Visible</b> auf <b>True</b> festgelegt, werden nicht sofort in einem personalisierten Menü oder Symbolleiste sichtbar, wenn <b>IsPriorityDropped</b> auf <b>True</b>festgelegt ist.</para> Um zu bestimmen, wann Sie Set <b>IsPriorityDropped</b> auf <b>True</b> für ein bestimmtes Menüelement, Microsoft Office verwaltet die Gesamtzahl der Anzahl, wie oft das Menüelement verwendet wurde und die Anzahl der anderen Anwendung Sitzungen, in denen der Benutzer hat, einen Datensatz 
          <para> ein weiteres Menüelement verwendet in demselben Menü als dieser Menüeintrag ohne Verwendung des bestimmten Menüelements. Wenn dieser Wert bestimmte Schwellenwerte erreicht, wird die Anzahl verringert. Wenn die Anzahl 0 (null) erreicht, wird <b>IsPriorityDropped</b> auf <b>True</b>festgelegt. Programmierer können nicht den Wert der Sitzung, den Schwellenwert oder die <b>IsPriorityDropped</b> -Eigenschaft festgelegt. Programmierer, jedoch können Sie die <see cref="P:Microsoft.Office.Core._CommandBars.AdaptiveMenus" /> -Eigenschaft adaptive Menüs für bestimmte Menüs in einer Anwendung deaktivieren.</para><para>Zu bestimmen, wann <b>IsPriorityDropped</b> auf <b>True</b> gesetzt, für eine bestimmte Symbolleiste, Office verwaltet eine Liste der Reihenfolge, in der alle Steuerelemente auf dieser Symbolleiste zuletzt ausgeführt wurden. Anzeigen einer Symbolleiste immer besitzt den verfügbaren Platz angezeigt, Anzahl von Steuerelementen in der Reihenfolge zuletzt verwendet, um am längsten verwendet. Steuerelemente mit <see cref="P:Microsoft.Office.Core._CommandBarButton.Priority" /> 1 festgelegt ist, werden immer angezeigt, und die Symbolleiste wird Zeilen umbrochen, falls erforderlich, um diese Steuerelemente anzuzeigen. Programmierer können die <b>Priority</b> -Eigenschaft verwenden, um sicherzustellen, dass bestimmte Symbolleisten-Steuerelemente werden immer angezeigt oder, Symbolleisten neu zu positionieren, damit sie genügend Speicherplatz zum Anzeigen aller Steuerelemente besitzen.</para><para>Anhand der folgenden Tabelle können Sie die Anzahl von Sitzungen Vorhersagen für die ein Menüelement in einem personalisierten Menü bleiben sichtbar, bevor das Menüelement <b>IsPriorityDropped</b> -Eigenschaft auf <b>True</b>festgelegt ist.</para><list type="table"><item><description><paramref name="0,1" /></description>3
            </item><item><description><paramref name="2" /></description>6
            </item><item><description><paramref name="3" /></description>9
            </item><item><description><paramref name="4, 5" /></description>12
            </item><item><description><paramref name="6-8" /></description>17
            </item><item><description><paramref name="9-13" /></description>23
            </item><item><description><paramref name="14-24" /></description>29
            </item><item><description><paramref name="25 or more" /></description>31
            </item></list><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-168">
              <para>Note that the returned value does not represent the control's visibility, as set by the <see cref="P:Microsoft.Office.Core._CommandBarButton.Visible" /> property. A control with <b>Visible</b> set to <b>True</b> will not be immediately visible on a personalized menu or toolbar if <b>IsPriorityDropped</b> is <b>True</b>.</para>
              <para>To determine when to set <b>IsPriorityDropped</b> to <b>True</b> for a specific menu item, Microsoft Office maintains a total count of the number of times the menu item was used and a record of the number of different application sessions in which the user has used another menu item in the same menu as this menu item, without using the specific menu item. When this value reaches certain threshold values, the count is decremented. When the count reaches zero, <b>IsPriorityDropped</b> is set to <b>True</b>. Programmers cannot set the session value, the threshold value, or the <b>IsPriorityDropped</b> property. Programmers can, however, use the <see cref="P:Microsoft.Office.Core._CommandBars.AdaptiveMenus" /> property to disable adaptive menus for specific menus in an application.</para>
              <para>To determine when to set <b>IsPriorityDropped</b> to <b>True</b> for a specific toolbar control, Office maintains a list of the order in which all the controls on that toolbar were last executed. A toolbar will always show as many controls as it has space to show, in the order of most recently used to least recently used. Controls with <see cref="P:Microsoft.Office.Core._CommandBarButton.Priority" /> set to 1 will always be shown and the toolbar will wrap rows, if necessary, to show these controls. Programmers can use the <b>Priority</b> property to ensure that specific toolbar controls are always shown, or to reposition toolbars so that they have enough space to display all of their controls.</para>
              <para>You can use the following table to predict the number of sessions for which a menu item on a personalized menu will remain visible before the menu item's <b>IsPriorityDropped</b> property is set to <b>True</b>.</para>
              <list type="table">
                <item>
                  <description>
                    <paramref name="0,1" />
                  </description>
                  <description>3</description>
                </item>
                <item>
                  <description>
                    <paramref name="2" />
                  </description>
                  <description>6</description>
                </item>
                <item>
                  <description>
                    <paramref name="3" />
                  </description>
                  <description>9</description>
                </item>
                <item>
                  <description>
                    <paramref name="4, 5" />
                  </description>
                  <description>12</description>
                </item>
                <item>
                  <description>
                    <paramref name="6-8" />
                  </description>
                  <description>17</description>
                </item>
                <item>
                  <description>
                    <paramref name="9-13" />
                  </description>
                  <description>23</description>
                </item>
                <item>
                  <description>
                    <paramref name="14-24" />
                  </description>
                  <description>29</description>
                </item>
                <item>
                  <description>
                    <paramref name="25 or more" />
                  </description>
                  <description>31</description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public int Left { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Left" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.Left" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Left As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Left { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core.CommandBarControl.Left</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610874903)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610874903)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-169">Gibt einen Wert, der die horizontale Position des angegebenen Befehlsleisten-Steuerelements (in Pixel) relativ zum linken Rand des Bildschirms angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-169">Returns a value that indicates the horizontal position of the specified command bar control (in pixels) relative to the left edge of the screen.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="7bdff-170">
            <para>Teile des Inhalts in diesem Thema treffen für bestimmte Sprachen möglicherweise nicht.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-170">
              <para>Some of the content in this topic may not be applicable to some languages.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mask">
      <MemberSignature Language="C#" Value="public stdole.IPictureDisp Mask { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class stdole.IPictureDisp Mask" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.Mask" />
      <MemberSignature Language="VB.NET" Value="Public Property Mask As IPictureDisp" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property stdole::IPictureDisp ^ Mask { stdole::IPictureDisp ^ get(); void set(stdole::IPictureDisp ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComAliasName("stdole.IPictureDisp")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610940432)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610940432)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1610940432)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>stdole.IPictureDisp</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-171">Gibt zurück oder legt diesen fest ein <b>IPictureDisp</b> -Objekt, das Maskenbild darstellt, ein <see cref="T:Microsoft.Office.Core._CommandBarButton" /> Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-171">Returns or sets an <b>IPictureDisp</b> object that represents the mask image of a <see cref="T:Microsoft.Office.Core._CommandBarButton" /> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="7bdff-172">
            <para>Das Maskenbild bestimmt, welche Teile des Schaltflächenbildes transparent sind.</para>
            <para>, Wenn Sie erstellen ein Bild, das Sie als Maskenbild verwenden möchten, weißen allen Bereichen, das transparent werden soll sollte, und die Bereiche, die Sie anzeigen möchten schwarz sein sollte.</para>
            <para>Immer legen Sie die Maske erst nach dem Festlegen des Bilds für eine <see cref="T:Microsoft.Office.Core.CommandBarButton" /> -Objekt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-172">
              <para>The mask image determines what parts of the button image are transparent.</para>
              <para>When you create an image that you plan on using as a mask image, all of the areas that you want to be transparent should be white, and all of the areas that you want to show should be black.</para>
              <para>Always set the mask after you have set the picture for a <see cref="T:Microsoft.Office.Core.CommandBarButton" /> object.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CommandBarControl Move (object Bar, object Before);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Core.CommandBarControl Move([in]object Bar, [in]object Before) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core._CommandBarButton.Move(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Move (Optional Bar As Object, Optional Before As Object) As CommandBarControl" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.Core.CommandBarControl.Move(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610874902)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CommandBarControl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Bar" Type="System.Object" />
        <Parameter Name="Before" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Bar">
          <span data-ttu-id="7bdff-p104">Eine Zahl, die die Position für das Steuerelement angibt. Das Steuerelement wird vor dem Steuerelement eingefügt, das sich momentan an dieser Position befindet. Wird dieses Argument weggelassen, wird das Steuerelement am Ende derselben Befehlsleiste eingefügt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-p104">A number that indicates the position for the control. The control is inserted before the control currently occupying this position. If this argument is omitted, the control is inserted on the same command bar.</span>
          </span>
        </param>
        <param name="Before">
          <span data-ttu-id="7bdff-176">Ein <see cref="T:Microsoft.Office.Core.CommandBar" /> -Objekt, das die Ziel-Befehlsleiste für das Steuerelement darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-176">A <see cref="T:Microsoft.Office.Core.CommandBar" /> object that represents the destination command bar for the control.</span>
          </span>
          <span data-ttu-id="7bdff-177">Wenn dieses Argument ausgelassen wird, ist das Steuerelement an das Ende der Befehlsleiste verschoben, in dem sich das Steuerelement derzeit befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-177">If this argument is omitted, the control is moved to the end of the command bar where the control currently resides.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7bdff-178">Verschiebt das angegebene Befehlsleisten-Steuerelement auf eine vorhandene Befehlsleiste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-178">Moves the specified command bar control to an existing command bar.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OLEUsage">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoControlOLEUsage OLEUsage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoControlOLEUsage OLEUsage" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.OLEUsage" />
      <MemberSignature Language="VB.NET" Value="Public Property OLEUsage As MsoControlOLEUsage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoControlOLEUsage OLEUsage { Microsoft::Office::Core::MsoControlOLEUsage get(); void set(Microsoft::Office::Core::MsoControlOLEUsage value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core.CommandBarControl.OLEUsage</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610874904)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610874904)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1610874904)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoControlOLEUsage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-179">Zurückgeben oder Festlegen der OLE-Clients und OLE-Serverrollen, in denen ein Befehlsleisten-Steuerelement beim Zusammenführen von zwei Microsoft Office-Anwendungen verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-179">Returns or sets the OLE client and OLE server roles in which a command bar control will be used when two Microsoft Office applications are merged.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="7bdff-180">
            <para>Diese Eigenschaft ist für die direkte Verwendung ermöglichen es Ihnen, wie einzelne Add-in-Applikationen Befehlsleiste Steuerelemente werden dargestellt werden in einer Office-Anwendung angeben, wenn es mit einer anderen Office-Anwendung zusammengeführt wird. Wenn Client und Server Befehlsleisten implementieren, werden die Befehlsleisten-Steuerelemente in der Client-Steuerelement eingebettet.</para>
            <para>Benutzerdefinierte Steuerelemente, die nur für den Client (oder Client weder Server) werden von den Server, und Steuerelemente, die nur für den Server (oder weder Server noch Client) gelöscht werden vom Client gelöscht. Die restlichen Steuerelemente werden zusammengeführt.</para>
            <para>Wenn eine der verbundenen Anwendungen keine Office-Anwendung ist, normale OLE-Menü-zusammenführen verwendet wird, die von gesteuert wird die <see cref="P:Microsoft.Office.Core.CommandBarPopup.OLEMenuGroup" /> -Eigenschaft.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-180">
              <para>This property is intended to allow you to specify how individual add-in applications' command bar controls will be represented in one Office application when it is merged with another Office application. If both the client and server implement command bars, the command bar controls are embedded in the client control by control.</para>
              <para>Custom controls marked as client-only (or neither client nor server) are dropped from the server, and controls marked as server-only (or neither server nor client) are dropped from the client. The remaining controls are merged.</para>
              <para>If one of the merging applications isn't an Office application, normal OLE menu merging is used, which is controlled by the <see cref="P:Microsoft.Office.Core.CommandBarPopup.OLEMenuGroup" /> property.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAction">
      <MemberSignature Language="C#" Value="public string OnAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnAction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.OnAction" />
      <MemberSignature Language="VB.NET" Value="Public Property OnAction As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnAction { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core.CommandBarControl.OnAction</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610874906)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610874906)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1610874906)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-181">Zurückgeben oder Festlegen der Name des Visual Basic-Prozedur, die ausgeführt wird, wenn der Benutzer klickt oder den Wert des Steuerelements auf einer Befehlsleiste ändert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-181">Returns or sets the name of a Visual Basic procedure that will run when the user clicks or changes the value of a command bar control.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="7bdff-182">
            <para>Der containeranwendung bestimmt, ob der Wert einer gültigen Makronamen handelt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-182">
              <para>The container application determines whether the value is a valid macro name.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameter">
      <MemberSignature Language="C#" Value="public string Parameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Parameter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.Parameter" />
      <MemberSignature Language="VB.NET" Value="Public Property Parameter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Parameter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core.CommandBarControl.Parameter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610874909)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610874909)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1610874909)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-183">Zurückgeben oder festlegen ein Werts, das eine Anwendung verwenden kann, um einen Befehl auszuführen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-183">Returns or sets a value that an application can use to execute a command.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="7bdff-184">
            <para>Der angegebene Parameter für ein integriertes Steuerelement festgelegt ist, kann die Anwendung Standardverhaltens ändern, wenn analysieren und des neuen Werts verwendet werden kann. Wenn der Parameter für benutzerdefinierte Steuerelemente festgelegt ist, kann zum Senden von Informationen zu Visual Basic-Prozeduren verwendet werden oder zum Speichern von Informationen über das Steuerelement verwendet werden (ähnlich einer Sekunde <see cref="P:Microsoft.Office.Core._CommandBarButton.Tag" /> Eigenschaftswert).</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-184">
              <para>If the specified parameter is set for a built-in control, the application can modify its default behavior if it can parse and use the new value. If the parameter is set for custom controls, it can be used to send information to Visual Basic procedures, or it can be used to hold information about the control (similar to a second <see cref="P:Microsoft.Office.Core._CommandBarButton.Tag" /> property value).</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CommandBar Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CommandBar Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As CommandBar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CommandBar ^ Parent { Microsoft::Office::Core::CommandBar ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core.CommandBarControl.Parent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610874908)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610874908)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CommandBar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-185">Gibt einen Wert, der das übergeordnete Objekt des angegebenen Objekts angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-185">Returns a value that indicates the parent object for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteFace">
      <MemberSignature Language="C#" Value="public void PasteFace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PasteFace() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core._CommandBarButton.PasteFace" />
      <MemberSignature Language="VB.NET" Value="Public Sub PasteFace ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PasteFace();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610940421)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-186">Fügt den Inhalt der Zwischenablage in ein Button-Steuerelement der Befehlsleiste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-186">Pastes the contents of the Clipboard onto a command bar button control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Picture">
      <MemberSignature Language="C#" Value="public stdole.IPictureDisp Picture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class stdole.IPictureDisp Picture" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.Picture" />
      <MemberSignature Language="VB.NET" Value="Public Property Picture As IPictureDisp" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property stdole::IPictureDisp ^ Picture { stdole::IPictureDisp ^ get(); void set(stdole::IPictureDisp ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComAliasName("stdole.IPictureDisp")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610940430)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610940430)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1610940430)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>stdole.IPictureDisp</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-187">Gibt, oder legt ein <b>IPictureDisp</b> -Objekt, das das Bild von einer <see cref="T:Microsoft.Office.Core._CommandBarButton" /> Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-187">Returns or sets an <b>IPictureDisp</b> object representing the image of a <see cref="T:Microsoft.Office.Core._CommandBarButton" /> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="7bdff-188">
            <para>Wenn Sie das Bild auf einer Schaltfläche ändern, sollten Sie auch mithilfe der <see cref="P:Microsoft.Office.Core._CommandBarButton.Mask" /> -Eigenschaft auf ein Maskenbild festlegen. Das Maskenbild bestimmt, welche Teile des Schaltflächenbildes transparent sind. Legen Sie die Maske nach dem Festlegen des Bilds für eine <see cref="T:Microsoft.Office.Core.CommandBarButton" /> Objekt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-188">
              <para>When you change the image on a button, you will also want to use the <see cref="P:Microsoft.Office.Core._CommandBarButton.Mask" /> property to set a mask image. The mask image determines which parts of the button image are transparent. Always set the mask after you have set the picture for a <see cref="T:Microsoft.Office.Core.CommandBarButton" /> object.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public int Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Priority" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Property Priority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Priority { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core.CommandBarControl.Priority</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610874911)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610874911)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1610874911)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-189">Zurückgeben oder festlegen die Priorität ein Befehlsleisten-Steuerelement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-189">Returns or sets the priority of a command bar control.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="7bdff-190">Die Priorität <para>A Steuerelements bestimmt, ob das Steuerelement aus einer angedockten Befehlsleiste entfernt werden kann, wenn die Befehlsleisten-Steuerelemente nicht in einer einzelnen Zeile passen. Steuerelemente, die nicht in einer einzelnen Zeile passen Befehlsleiste von rechts nach links.</para><para>Gültige Werte für die Priorität sind 0 (null) bis 7, und der Standardwert ist 3. Die Priorität 1 bedeutet, dass das Steuerelement aus einer Symbolleiste entfernt werden kann. Andere Prioritätswerte werden ignoriert.</para><para>Die <b>Priority</b> -Eigenschaft wird nicht von Befehlsleisten-Steuerelemente, die Menübefehle sind.</para><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-190">
              <para>A control's priority determines whether the control can be dropped from a docked command bar if the command bar controls can't fit in a single row. Controls that can't fit in a single row drop off command bars from right to left.</para>
              <para>Valid priority numbers are 0 (zero) through 7 and the default value is 3. A priority of 1 means that the control cannot be dropped from a toolbar. Other priority values are ignored.</para>
              <para>The <b>Priority</b> property is not used by command bar controls that are menu items.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reserved1">
      <MemberSignature Language="C#" Value="public void Reserved1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reserved1() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core._CommandBarButton.Reserved1" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reserved1 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reserved1();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.Core.CommandBarControl.Reserved1</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610874926)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-191">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-191">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reserved2">
      <MemberSignature Language="C#" Value="public void Reserved2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reserved2() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core._CommandBarButton.Reserved2" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reserved2 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reserved2();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.Core.CommandBarControl.Reserved2</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610874927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-192">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-192">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reserved3">
      <MemberSignature Language="C#" Value="public void Reserved3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reserved3() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core._CommandBarButton.Reserved3" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reserved3 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reserved3();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.Core.CommandBarControl.Reserved3</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610874928)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-193">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-193">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reserved4">
      <MemberSignature Language="C#" Value="public void Reserved4 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reserved4() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core._CommandBarButton.Reserved4" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reserved4 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reserved4();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.Core.CommandBarControl.Reserved4</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610874929)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-194">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-194">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reserved5">
      <MemberSignature Language="C#" Value="public void Reserved5 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reserved5() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core._CommandBarButton.Reserved5" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reserved5 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reserved5();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.Core.CommandBarControl.Reserved5</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610874930)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-195">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-195">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reserved6">
      <MemberSignature Language="C#" Value="public void Reserved6 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reserved6() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core._CommandBarButton.Reserved6" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reserved6 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reserved6();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.Core.CommandBarControl.Reserved6</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610874931)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-196">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-196">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reserved7">
      <MemberSignature Language="C#" Value="public void Reserved7 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reserved7() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core._CommandBarButton.Reserved7" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reserved7 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reserved7();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.Core.CommandBarControl.Reserved7</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610874932)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-197">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-197">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core._CommandBarButton.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.Core.CommandBarControl.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610874913)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-198">Setzt ein integriertes Befehlsleisten-Steuerelement auf die Standardfunktion und das Standardsymbol zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-198">Resets a built-in command bar control to its original function and face.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="7bdff-199">
            <para>Zurücksetzen eines integrierten Steuerelements wird die ursprünglich für dieses Steuerelement vorgesehenen Aktionen wiederhergestellt und aller Eigenschaften des Steuerelements auf den ursprünglichen Zustand zurückgesetzt. Eine integrierte Befehlsleiste zurücksetzen entfernt benutzerdefinierte Steuerelemente und integrierten Steuerelemente wiederhergestellt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-199">
              <para>Resetting a built-in control restores the actions originally intended for the control and resets each of the control's properties back to its original state. Resetting a built-in command bar removes custom controls and restores built-in controls.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFocus">
      <MemberSignature Language="C#" Value="public void SetFocus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFocus() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core._CommandBarButton.SetFocus" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFocus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFocus();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.Core.CommandBarControl.SetFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610874914)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-200">Verschiebt den Tastaturfokus auf das angegebene Befehlsleisten-Steuerelement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-200">Moves the keyboard focus to the specified command bar control.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="7bdff-201">
            <para>Diese Methode schlägt fehl, wenn das Steuerelement deaktiviert ist oder nicht sichtbar ist,.</para>
            <para>Wird der Fokus auf das Steuerelement Subtiler. Nachdem Sie diese Methode verwenden, werden Sie bemerken, dass eine drei dimensionale Hervorhebung auf das Steuerelement. Die Pfeiltasten navigiert in Symbolleisten, als ob Sie auf das Steuerelement durch Drücken von nur Tastatur Steuerelemente eingegangen.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-201">
              <para>If the control is disabled or isn't visible, this method will fail.</para>
              <para>The focus on the control is subtle. After you use this method, you will notice a three dimensional highlight on the control. Pressing the arrow keys will navigate in the toolbars, as if you had arrived at the control by pressing only keyboard controls.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShortcutText">
      <MemberSignature Language="C#" Value="public string ShortcutText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ShortcutText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.ShortcutText" />
      <MemberSignature Language="VB.NET" Value="Public Property ShortcutText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ShortcutText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610940422)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610940422)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1610940422)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-202">Zurückgeben oder festlegen den Text der Zugriffstaste neben ein Button-Steuerelement angezeigt wird, wenn die Schaltfläche in einem Menü, einem Untermenü oder einem Kontextmenü angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-202">Returns or sets the shortcut key text displayed next to a button control when the button appears on a menu, submenu, or shortcut menu.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="7bdff-203">
            <para>Sie können diese Eigenschaft nur für Befehlsleistenschaltflächen, die enthalten Festlegen einer <see cref="P:Microsoft.Office.Core._CommandBarButton.OnAction" /> Makro.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-203">
              <para>You can set this property only for command bar buttons that contain an <see cref="P:Microsoft.Office.Core._CommandBarButton.OnAction" /> macro.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoButtonState State { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoButtonState State" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.State" />
      <MemberSignature Language="VB.NET" Value="Public Property State As MsoButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoButtonState State { Microsoft::Office::Core::MsoButtonState get(); void set(Microsoft::Office::Core::MsoButtonState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610940424)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610940424)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1610940424)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-204">Gibt zurück oder legt das Erscheinungsbild der Schaltflächensteuerelement einer Befehlsleiste fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-204">Returns or sets the appearance of a command bar button control.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoButtonStyle Style { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoButtonStyle Style" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.Style" />
      <MemberSignature Language="VB.NET" Value="Public Property Style As MsoButtonStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoButtonStyle Style { Microsoft::Office::Core::MsoButtonStyle get(); void set(Microsoft::Office::Core::MsoButtonStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610940426)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610940426)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1610940426)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoButtonStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-205">Gibt zurück oder legt diesen fest wie die Schaltflächensteuerelement eine Befehlsleiste angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-205">Returns or sets the way a command bar button control is displayed.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public string Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Tag" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Tag { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core.CommandBarControl.Tag</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610874915)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610874915)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1610874915)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-206">Zurück oder legt die Informationen über das Befehlsleisten-Steuerelement, wie Daten, die als Argument in Prozeduren verwendet werden können, oder Informationen, die das Steuerelement identifiziert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-206">Returns or sets the information about the command bar control, such as data that can be used as an argument in procedures, or information that identifies the control.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="7bdff-207">
            <para>Legen Sie zum Vermeiden von doppelten Aufrufe von der gleichen Klasse mithilfe von Ereignissen ausgelöst, die eindeutige <b>Tag</b> -Eigenschaft für die Ereignisse.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-207">
              <para>To avoid duplicate calls of the same class when triggered with events, define the <b>Tag</b> property unique to the events.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TooltipText">
      <MemberSignature Language="C#" Value="public string TooltipText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TooltipText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.TooltipText" />
      <MemberSignature Language="VB.NET" Value="Public Property TooltipText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TooltipText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core.CommandBarControl.TooltipText</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610874917)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610874917)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1610874917)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-208">Gibt zurück oder legt den Text in einer Befehlsleiste des Steuerelements QuickInfo angezeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-208">Returns or sets the text displayed in a command bar control's ScreenTip.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="7bdff-209">
            <para>Standardmäßig ist der Wert der <see cref="P:Microsoft.Office.Core._CommandBarButton.Caption" /> -Eigenschaft wird als QuickInfo verwendet.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-209">
              <para>By default, the value of the <see cref="P:Microsoft.Office.Core._CommandBarButton.Caption" /> property is used as the ScreenTip.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public int Top { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Top" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.Top" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Top As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Top { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core.CommandBarControl.Top</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610874919)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610874919)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-210">Gibt den Abstand (in Pixeln) vom oberen Rand des angegebenen Befehlsleisten-Steuerelements und der Oberkante des Bildschirms zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-210">Returns the distance (in pixels) from the top edge of the specified command bar control to the top edge of the screen.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="7bdff-211">
            <para>Teile des Inhalts in diesem Thema treffen für bestimmte Sprachen möglicherweise nicht.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-211">
              <para>Some of the content in this topic may not be applicable to some languages.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoControlType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoControlType Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As MsoControlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoControlType Type { Microsoft::Office::Core::MsoControlType get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core.CommandBarControl.Type</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610874920)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610874920)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-212">Gibt den Typ des Befehlsleisten-Steuerelements zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-212">Returns the type of command bar control.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core.CommandBarControl.Visible</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610874921)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610874921)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1610874921)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-213">Zurückgeben oder festlegen ein Werts, das angibt, ob das angegebene Objekt sichtbar ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-213">Returns or sets a value that indicates if the specified object is visible.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="7bdff-214">
            <para>Teile des Inhalts in diesem Thema möglicherweise nicht in der treffen für bestimmte Sprachen.</para>
            <para>Die <b>Visible</b> -Eigenschaft neu erstellter, benutzerdefinierter Befehlsleisten lautet <b>False</b> standardmäßig.</para>
            <para>Der <see cref="P:Microsoft.Office.Core._CommandBarButton.Enabled" /> -Eigenschaft für eine Befehlsleiste muss auf <b>True</b> festgelegt sein, bevor die visible-Eigenschaft auf <b>True</b>festgelegt ist.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-214">
              <para>Some of the content in this topic may not be applicable to some languages.</para>
              <para>The <b>Visible</b> property for newly created custom command bars is <b>False</b> by default.</para>
              <para>The <see cref="P:Microsoft.Office.Core._CommandBarButton.Enabled" /> property for a command bar must be set to <b>True</b> before the visible property is set to <b>True</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public int Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Width" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBarButton.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Width { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core.CommandBarControl.Width</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610874923)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610874923)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1610874923)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bdff-215">Zurückgeben oder festlegen die Breite (in Pixel) des angegebenen Befehlsleisten-Steuerelements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bdff-215">Returns or sets the width (in pixels) of the specified command bar control.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>