<Type Name="CustomXMLNode" FullName="Microsoft.Office.Core.CustomXMLNode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bf745aff799d7f2e6ef599bbb549cfbdeb5ce457" />
    <Meta Name="ms.sourcegitcommit" Value="f41bc3cdd2c00b9a51a4340ac823a9e309633924" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20659945" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface CustomXMLNode : Microsoft.Office.Core._IMsoDispObj" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract CustomXMLNode implements class Microsoft.Office.Core._IMsoDispObj" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Core.CustomXMLNode" />
  <TypeSignature Language="VB.NET" Value="Public Interface CustomXMLNode&#xA;Implements _IMsoDispObj" />
  <TypeSignature Language="C++ CLI" Value="public interface class CustomXMLNode : Microsoft::Office::Core::_IMsoDispObj" />
  <AssemblyInfo>
    <AssemblyName>office</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Office.Core._IMsoDispObj</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000CDB04-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e0333-101">Stellt einen XML-Knoten in einer Struktur in einem Dokument dar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e0333-101">Represents an XML node in a tree in a document.</span>
      </span>
      <span data-ttu-id="e0333-102">Die <see cref="T:Microsoft.Office.Core.CustomXMLNode" /> -Objekt ist ein Mitglied der <see cref="T:Microsoft.Office.Core.CustomXMLNodes" /> Auflistung.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e0333-102">The <see cref="T:Microsoft.Office.Core.CustomXMLNode" /> object is a member of the <see cref="T:Microsoft.Office.Core.CustomXMLNodes" /> collection.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="e0333-103">
        <para>Die <see cref="T:Microsoft.Office.Core.CustomXMLNode" /> Objekt dient der funktionellen Parität mit der <b>IXMLDOMNode</b> -Schnittstelle haben. Darüber hinaus enthält es ein <see cref="P:Microsoft.Office.Core.CustomXMLNode.XPath" /> -Eigenschaft die ist eine hervorragende Verbesserung über die Objekte von MSXML.</para>
        <para />
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="e0333-103">
          <para>The <see cref="T:Microsoft.Office.Core.CustomXMLNode" /> object is designed to have funtional parity with the <b>IXMLDOMNode</b> interface. In addition, it contains an <see cref="P:Microsoft.Office.Core.CustomXMLNode.XPath" /> property which is a great improvement over the objects  provided by MSXML.</para>
          <para />
        </span>
      </span>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AppendChildNode">
      <MemberSignature Language="C#" Value="public void AppendChildNode (string Name = &quot;&quot;, string NamespaceURI = &quot;&quot;, Microsoft.Office.Core.MsoCustomXMLNodeType NodeType = Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement, string NodeValue = &quot;&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendChildNode([in]string Name, [in]string NamespaceURI, [in]valuetype Microsoft.Office.Core.MsoCustomXMLNodeType NodeType, [in]string NodeValue) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.CustomXMLNode.AppendChildNode(System.String,System.String,Microsoft.Office.Core.MsoCustomXMLNodeType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendChildNode (Optional Name As String = &quot;&quot;, Optional NamespaceURI As String = &quot;&quot;, Optional NodeType As MsoCustomXMLNodeType = Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement, Optional NodeValue As String = &quot;&quot;)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809363)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="NamespaceURI" Type="System.String" />
        <Parameter Name="NodeType" Type="Microsoft.Office.Core.MsoCustomXMLNodeType" />
        <Parameter Name="NodeValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="e0333-104">Stellt den Basisnamen des anzufügenden Elements dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-104">Represents the base name of the element to be appended.</span>
          </span>
        </param>
        <param name="NamespaceURI">
          <span data-ttu-id="e0333-105">Stellt den Namespace des anzufügenden Elements dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-105">Represents the namespace of the element to be appended.</span>
          </span>
          <span data-ttu-id="e0333-106">Dieser Parameter ist erforderlich, um die Knoten vom Typ append <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" /> oder <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeAttribute" />, andernfalls wird ignoriert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-106">This parameter is required to append nodes of type <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" /> or <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeAttribute" />, otherwise it is ignored.</span>
          </span>
        </param>
        <param name="NodeType">
          <span data-ttu-id="e0333-107">Gibt den Typ des Knotens, angefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-107">Specifies the type of node to append.</span>
          </span>
          <span data-ttu-id="e0333-108">Wenn der Parameter nicht angegeben wird, wird angenommen, werden vom Typ <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-108">If the parameter is not specified, it is assumed to be of type <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" />.</span>
          </span>
        </param>
        <param name="NodeValue">
          <span data-ttu-id="e0333-p104">Wird zum Festlegen des Werts des angefügten Knotens für die Knoten verwendet, die Text zulassen. Lässt der Knoten keinen Text zu, wird der Parameter ignoriert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-p104">Used to set the value of the appended node for those nodes that allow text. If the node doesn’t allow text, the parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e0333-111">Fügt einen einzelnen Knoten als letzten untergeordneten Knoten unter dem Kontextelementknoten in der Struktur an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-111">Appends a single node as the last child under the context element node in the tree.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="e0333-112">
            <para>Sofern der Kontextknoten beliebigen Typs als <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" />, oder wenn der Vorgang zu einer ungültigen Struktur führen würde, die Anfügung nicht ausgeführt, und eine Fehlermeldung wird angezeigt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-112">
              <para>If the context node is any type other than <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" />, or if the operation would result in an invalid tree structure, the append is not performed and an error message is displayed.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendChildSubtree">
      <MemberSignature Language="C#" Value="public void AppendChildSubtree (string XML);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendChildSubtree([in]string XML) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.CustomXMLNode.AppendChildSubtree(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendChildSubtree (XML As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendChildSubtree(System::String ^ XML);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809364)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XML" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="XML">
          <span data-ttu-id="e0333-113">Stellt die hinzuzufügende Unterstruktur dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-113">Represents the subtree to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e0333-114">Fügt eine Unterstruktur als letzten untergeordneten Knoten unter dem Kontextelementknoten in der Struktur hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-114">Adds a subtree as the last child under the context element node in the tree.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="e0333-115">
            <para>Sofern der Kontextknoten beliebigen Typs als <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" />, wird das Anfügen nicht ausgeführt, und eine Fehlermeldung wird angezeigt.  Wenn die <see cref="T:Microsoft.Office.Core.CustomXMLNode" /> wird anhand eines Schemas überprüft wird, und wenn der Vorgang zu einer ungültigen Struktur führen würde, wird das Anfügen nicht ausgeführt und eine Fehlermeldung wird angezeigt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-115">
              <para>If the context node is any type other than <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" />, the append operation is not performed and an error message is displayed.  If the <see cref="T:Microsoft.Office.Core.CustomXMLNode" /> is being validated against a schema and if the operation would result in an invalid tree structure,  the append operation is not performed and an error message is displayed.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public object Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.CustomXMLNode.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Application { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core._IMsoDispObj.Application</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610743808)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610743808)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0333-116">Ruft ein <b>Application</b> -Objekt, die der containeranwendung für eine <see cref="T:Microsoft.Office.Core.CustomXMLNode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-116">Gets an <b>Application</b> object that represents the container application for a <see cref="T:Microsoft.Office.Core.CustomXMLNode" />.</span>
          </span>
          <span data-ttu-id="e0333-117">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-117">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0333-118">
            <b>Objekt</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-118">
              <b>Object</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CustomXMLNodes Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CustomXMLNodes Attributes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.CustomXMLNode.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As CustomXMLNodes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CustomXMLNodes ^ Attributes { Microsoft::Office::Core::CustomXMLNodes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809345)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809345)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CustomXMLNodes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0333-119">Dient zum Abrufen einer <see cref="T:Microsoft.Office.Core.CustomXMLNode" /> Auflistung zurück, die Attribute des aktuellen Elements im aktuellen Knoten darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-119">Gets a <see cref="T:Microsoft.Office.Core.CustomXMLNode" /> collection representing the attributes of the current element in the current node.</span>
          </span>
          <span data-ttu-id="e0333-120">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-120">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.CustomXMLNodes" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseName">
      <MemberSignature Language="C#" Value="public string BaseName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.CustomXMLNode.BaseName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BaseName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809346)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809346)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0333-p107">Ruft den Basisnamen des Knotens ohne das Namespacepräfix (soweit vorhanden) im Dokumentobjektmodell (DOM) ab. Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-p107">Gets the base name of the node without the namespace prefix, if one exists, in the Document Object Model (DOM). Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0333-123">
            <b>String</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-123">
              <b>String</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="e0333-124">
            <para>Dies ist das Standardelement des <see cref="T:Microsoft.Office.Core.CustomXMLNode" /> Objekt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-124">
              <para>This is the default member of <see cref="T:Microsoft.Office.Core.CustomXMLNode" /> object.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildNodes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CustomXMLNodes ChildNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CustomXMLNodes ChildNodes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.CustomXMLNode.ChildNodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildNodes As CustomXMLNodes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CustomXMLNodes ^ ChildNodes { Microsoft::Office::Core::CustomXMLNodes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809347)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809347)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CustomXMLNodes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0333-125">Dient zum Abrufen einer <see cref="T:Microsoft.Office.Core.CustomXMLNodes" /> Auflistung enthält alle untergeordneten Elemente des aktuellen Knotens.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-125">Gets a <see cref="T:Microsoft.Office.Core.CustomXMLNodes" /> collection containing all of the child elements of the current node.</span>
          </span>
          <span data-ttu-id="e0333-126">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-126">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.CustomXMLNodes" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public int Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.CustomXMLNode.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Creator { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core._IMsoDispObj.Creator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610743809)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610743809)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0333-127">Ruft eine 32-Bit-Ganzzahl, die die Anwendung, in angibt der <see cref="T:Microsoft.Office.Core.CustomXMLNode" /> -Objekt erstellt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-127">Gets a 32-bit integer that indicates the application in which the <see cref="T:Microsoft.Office.Core.CustomXMLNode" /> object  was created.</span>
          </span>
          <span data-ttu-id="e0333-128">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-128">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0333-129">
            <b>Integer</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-129">
              <b>Integer</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.CustomXMLNode.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809365)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e0333-130">Löscht den aktuellen Knoten aus der Struktur (einschließlich aller untergeordneter Elemente, soweit vorhanden).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-130">Deletes the current node from the tree (including all of its children, if any exist).</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="e0333-131">
            <para>Wenn der Vorgang zu einer ungültigen Struktur führen würde, der Löschvorgang nicht ausgeführt, und eine Fehlermeldung wird angezeigt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-131">
              <para>If the operation would result in an invalid tree structure, the deletion is not performed and an error message is displayed.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstChild">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CustomXMLNode FirstChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CustomXMLNode FirstChild" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.CustomXMLNode.FirstChild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FirstChild As CustomXMLNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CustomXMLNode ^ FirstChild { Microsoft::Office::Core::CustomXMLNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809348)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809348)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CustomXMLNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0333-132">Ruft ein <see cref="T:Microsoft.Office.Core.CustomXMLNode" /> -Objekt, das erste untergeordnete Element des aktuellen Knotens entspricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-132">Gets a <see cref="T:Microsoft.Office.Core.CustomXMLNode" /> object corresponding to the first child element of the current node.</span>
          </span>
          <span data-ttu-id="e0333-133">Wenn der Knoten keine untergeordneten Elemente aufweist (oder nicht vom Typ <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" />), gibt <b>Nothing zurück</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-133">If the node has no child elements (or if it isn’t of type <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" />), returns <b>Nothing</b>.</span>
          </span>
          <span data-ttu-id="e0333-134">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-134">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.CustomXMLNode" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasChildNodes">
      <MemberSignature Language="C#" Value="public bool HasChildNodes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasChildNodes() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.CustomXMLNode.HasChildNodes" />
      <MemberSignature Language="VB.NET" Value="Public Function HasChildNodes () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasChildNodes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809366)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e0333-135">Gibt <b>True</b> zurück, wenn der aktuelle Elementknoten untergeordnete Elementknoten aufweist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-135">Returns <b>True</b> if the current element node has child element nodes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e0333-136">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-136">
              <b>Boolean</b>
            </span>
          </span>
        </returns>
        <remarks>
          <span data-ttu-id="e0333-137">
            <para>Diese Methode gibt immer <b>False</b> zurück beim <see cref="T:Microsoft.Office.Core.CustomXMLNode" /> ist nicht vom Knotentyp <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" />.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-137">
              <para>This method will always return <b>False</b> when <see cref="T:Microsoft.Office.Core.CustomXMLNode" /> isn’t of node type <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" />.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertNodeBefore">
      <MemberSignature Language="C#" Value="public void InsertNodeBefore (string Name = &quot;&quot;, string NamespaceURI = &quot;&quot;, Microsoft.Office.Core.MsoCustomXMLNodeType NodeType = Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement, string NodeValue = &quot;&quot;, Microsoft.Office.Core.CustomXMLNode NextSibling = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertNodeBefore([in]string Name, [in]string NamespaceURI, [in]valuetype Microsoft.Office.Core.MsoCustomXMLNodeType NodeType, [in]string NodeValue, [in]class Microsoft.Office.Core.CustomXMLNode NextSibling) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.CustomXMLNode.InsertNodeBefore(System.String,System.String,Microsoft.Office.Core.MsoCustomXMLNodeType,System.String,Microsoft.Office.Core.CustomXMLNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertNodeBefore (Optional Name As String = &quot;&quot;, Optional NamespaceURI As String = &quot;&quot;, Optional NodeType As MsoCustomXMLNodeType = Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement, Optional NodeValue As String = &quot;&quot;, Optional NextSibling As CustomXMLNode = null)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809367)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="NamespaceURI" Type="System.String" />
        <Parameter Name="NodeType" Type="Microsoft.Office.Core.MsoCustomXMLNodeType" />
        <Parameter Name="NodeValue" Type="System.String" />
        <Parameter Name="NextSibling" Type="Microsoft.Office.Core.CustomXMLNode" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="e0333-138">Stellt den Basisnamen des hinzuzufügenden Knotens dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-138">Represents the base name of the node to be added.</span>
          </span>
        </param>
        <param name="NamespaceURI">
          <span data-ttu-id="e0333-139">Stellt den Namespace des hinzuzufügenden Elements dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-139">Represents the namespace of the element to be added.</span>
          </span>
          <span data-ttu-id="e0333-140">Dieser Parameter ist erforderlich, wenn das Hinzufügen von Knoten vom Typ <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" /> oder <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeAttribute" />, andernfalls wird ignoriert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-140">This parameter is required if adding nodes of type <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" /> or <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeAttribute" />, otherwise it is ignored.</span>
          </span>
        </param>
        <param name="NodeType">
          <span data-ttu-id="e0333-141">Gibt den Typ des hinzuzufügenden Knotens an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-141">Specifies the type of the node to be added.</span>
          </span>
          <span data-ttu-id="e0333-142">Wenn der Parameter nicht angegeben ist, wird angenommen, ein Knoten vom Typ <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-142">If the parameter is not specified, it is assumed to be a node of type <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" />.</span>
          </span>
        </param>
        <param name="NodeValue">
          <span data-ttu-id="e0333-p113">Wird zum Festlegen des Werts des hinzugefügten Knotens für die Knoten verwendet, die Text zulassen. Lässt der Knoten keinen Text zu, wird der Parameter ignoriert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-p113">Used to set the value of the  node to be added for those nodes that allow text. If the node doesn’t allow text, the parameter is ignored.</span>
          </span>
        </param>
        <param name="NextSibling">
          <span data-ttu-id="e0333-145">Stellt den Kontextknoten dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-145">Represents the context node.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e0333-146">Fügt direkt vor dem Kontextknoten in der Struktur einen neuen Knoten ein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-146">Inserts a new node just before the context node in the tree.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="e0333-147">
            <para>Wenn der Kontextknoten nicht vorhanden, beim Hinzufügen eines Knotens vom Typ ist <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" />, <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeComment" />, oder <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeProcessingInstruction" />, der neue Knoten wird bis zum letzten untergeordneten Knoten des Kontextknotens hinzugefügt. Wenn der Vorgang zu einer ungültigen Struktur führen würde, die Einfügemarke nicht ausgeführt, und eine Fehlermeldung wird angezeigt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-147">
              <para>If the context node is not present when adding a node of type <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" />, <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeComment" />, or <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeProcessingInstruction" />, the new node is added to the last child of the context node. If the operation would result in an invalid tree structure, the insertion is not performed and an error message is displayed.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertSubtreeBefore">
      <MemberSignature Language="C#" Value="public void InsertSubtreeBefore (string XML, Microsoft.Office.Core.CustomXMLNode NextSibling = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertSubtreeBefore([in]string XML, [in]class Microsoft.Office.Core.CustomXMLNode NextSibling) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.CustomXMLNode.InsertSubtreeBefore(System.String,Microsoft.Office.Core.CustomXMLNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertSubtreeBefore (XML As String, Optional NextSibling As CustomXMLNode = null)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809368)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XML" Type="System.String" />
        <Parameter Name="NextSibling" Type="Microsoft.Office.Core.CustomXMLNode" />
      </Parameters>
      <Docs>
        <param name="XML">
          <span data-ttu-id="e0333-148">Stellt die hinzuzufügende Unterstruktur dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-148">Represents the subtree to be added.</span>
          </span>
        </param>
        <param name="NextSibling">
          <span data-ttu-id="e0333-149">Gibt den Kontextknoten an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-149">Specifies the context node.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e0333-150">Fügt die angegebene Unterstruktur direkt vor dem Kontextknoten ein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-150">Inserts the specified subtree into the location just before the context node.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="e0333-151">
            <para>Wenn die <paramref name="NextSibling" /> Parameter ist kein untergeordneter Knoten des Kontextknotens oder, wenn der Vorgang zu einer ungültigen Struktur führen würde, wird die Einfügemarke nicht ausgeführt, und eine Fehlermeldung wird angezeigt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-151">
              <para>If the <paramref name="NextSibling" /> parameter is not a child of the context node or if the operation would result in an invalid tree structure, the insertion is not performed and an error message is displayed. </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastChild">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CustomXMLNode LastChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CustomXMLNode LastChild" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.CustomXMLNode.LastChild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastChild As CustomXMLNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CustomXMLNode ^ LastChild { Microsoft::Office::Core::CustomXMLNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809349)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809349)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CustomXMLNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0333-152">Ruft ein <see cref="T:Microsoft.Office.Core.CustomXMLNode" /> -Objekt auf die letzte untergeordnete Element des aktuellen Knotens entspricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-152">Gets a <see cref="T:Microsoft.Office.Core.CustomXMLNode" /> object corresponding to the last child element of the current node.</span>
          </span>
          <span data-ttu-id="e0333-153">Wenn der Knoten keine untergeordneten Elemente aufweist (oder ist nicht vom Typ <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" />), die-Eigenschaft gibt <b>Nothing zurück</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-153">If the node has no child elements (or if it is not of type <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" />), the property returns <b>Nothing</b>.</span>
          </span>
          <span data-ttu-id="e0333-154">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-154">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.CustomXMLNode" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NamespaceURI">
      <MemberSignature Language="C#" Value="public string NamespaceURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceURI" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.CustomXMLNode.NamespaceURI" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NamespaceURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NamespaceURI { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809350)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809350)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0333-155">Dient zum Abrufen des Adresse eindeutigen Bezeichners für den Namespace der der <see cref="T:Microsoft.Office.Core.CustomXMLNode" /> Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-155">Gets  the unique address identifier for the namespace of the <see cref="T:Microsoft.Office.Core.CustomXMLNode" /> object.</span>
          </span>
          <span data-ttu-id="e0333-156">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-156">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0333-157">
            <b>String</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-157">
              <b>String</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextSibling">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CustomXMLNode NextSibling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CustomXMLNode NextSibling" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.CustomXMLNode.NextSibling" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextSibling As CustomXMLNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CustomXMLNode ^ NextSibling { Microsoft::Office::Core::CustomXMLNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809351)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809351)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CustomXMLNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0333-p116">Ruft den nächsten gleichgeordneten Knoten-Knoten (Element, Kommentar oder verarbeitungsanweisung) des aktuellen Knotens ab. Wenn der Knoten der letzten gleichgeordneten Knoten auf dieser Ebene ist, gibt die Eigenschaft <b>Nothing zurück</b>. Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-p116">Gets the next sibling node (element, comment, or processing instruction) of the current node. If the node is the last sibling at its level, the property returns <b>Nothing</b>. Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.CustomXMLNode" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoCustomXMLNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoCustomXMLNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.CustomXMLNode.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NodeType As MsoCustomXMLNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoCustomXMLNodeType NodeType { Microsoft::Office::Core::MsoCustomXMLNodeType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809352)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809352)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoCustomXMLNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0333-p117">Ruft den Typ des aktuellen Knotens ab. Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-p117">Gets the type of the current node. Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.MsoCustomXMLNodeType" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeValue">
      <MemberSignature Language="C#" Value="public string NodeValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NodeValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.CustomXMLNode.NodeValue" />
      <MemberSignature Language="VB.NET" Value="Public Property NodeValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NodeValue { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809353)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809353)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1610809353)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0333-p118">Ruft den Wert des aktuellen Knotens ab oder legt ihn fest. Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-p118">Gets or sets the value of the current node. Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0333-165">
            <b>String</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-165">
              <b>String</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnerDocument">
      <MemberSignature Language="C#" Value="public object OwnerDocument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object OwnerDocument" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.CustomXMLNode.OwnerDocument" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OwnerDocument As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ OwnerDocument { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809355)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809355)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0333-166">Ruft das Objekt, das die Microsoft Office Excel-Arbeitsmappe, Microsoft Office PowerPoint-Präsentation oder das zugeordnete dieser Knoten Microsoft Office Word-Dokument darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-166">Gets the object representing the Microsoft Office Excel workbook, Microsoft Office PowerPoint presentation, or the Microsoft Office Word document associated with this node.</span>
          </span>
          <span data-ttu-id="e0333-167">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-167">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0333-168">
            <b>Objekt</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-168">
              <b>Object</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnerPart">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CustomXMLPart OwnerPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CustomXMLPart OwnerPart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.CustomXMLNode.OwnerPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OwnerPart As CustomXMLPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CustomXMLPart ^ OwnerPart { Microsoft::Office::Core::CustomXMLPart ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809356)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809356)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CustomXMLPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0333-p120">Ruft das Objekt ab, das die Komponente darstellt, die diesem Knoten zugeordnet ist. Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-p120">Gets the object representing the part associated with this node. Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core._CustomXMLPart" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.CustomXMLNode.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809344)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809344)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0333-171">Ruft ab, der übergeordnete Objekt für das <see cref="T:Microsoft.Office.Core.CustomXMLNode" /> Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-171">Gets the parent object for the <see cref="T:Microsoft.Office.Core.CustomXMLNode" /> object.</span>
          </span>
          <span data-ttu-id="e0333-172">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-172">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0333-173">
            <b>Objekt</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-173">
              <b>Object</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentNode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CustomXMLNode ParentNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CustomXMLNode ParentNode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.CustomXMLNode.ParentNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentNode As CustomXMLNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CustomXMLNode ^ ParentNode { Microsoft::Office::Core::CustomXMLNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809358)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809358)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CustomXMLNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0333-p122">Ruft den übergeordneten Elementknoten des aktuellen Knotens ab. Wenn der aktuelle Knoten auf der Stammebene ist, gibt die Eigenschaft <b>Nothing zurück</b>. Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-p122">Gets the parent element node of the current node. If the current node is at the root level, the property returns <b>Nothing</b>. Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.CustomXMLNode" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousSibling">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CustomXMLNode PreviousSibling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CustomXMLNode PreviousSibling" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.CustomXMLNode.PreviousSibling" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreviousSibling As CustomXMLNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CustomXMLNode ^ PreviousSibling { Microsoft::Office::Core::CustomXMLNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809357)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809357)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CustomXMLNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0333-p123">Ruft den vorherigen nebengeordneten-Knoten (Element, Kommentar oder verarbeitungsanweisung) des aktuellen Knotens ab. Wenn der aktuelle Knoten der ersten gleichgeordneten Knoten auf dieser Ebene ist, gibt die Eigenschaft <b>Nothing zurück</b>. Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-p123">Gets the previous sibling node (element, comment, or processing instruction) of the current node. If the current node is the first sibling at its level, the property returns <b>Nothing</b>. Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.CustomXMLNode" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveChild">
      <MemberSignature Language="C#" Value="public void RemoveChild (Microsoft.Office.Core.CustomXMLNode Child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveChild([in]class Microsoft.Office.Core.CustomXMLNode Child) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.CustomXMLNode.RemoveChild(Microsoft.Office.Core.CustomXMLNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveChild (Child As CustomXMLNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveChild(Microsoft::Office::Core::CustomXMLNode ^ Child);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809369)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Child" Type="Microsoft.Office.Core.CustomXMLNode" />
      </Parameters>
      <Docs>
        <param name="Child">
          <span data-ttu-id="e0333-180">Stellt den untergeordneten Knoten des Kontextknotens dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-180">Represents the child node of the context node.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e0333-181">Entfernt den angegebenen untergeordneten Knoten aus der Struktur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-181">Removes the specified child node from the tree.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="e0333-182">
            <para>Wenn der Knoten, in angegeben der <paramref name="Child" /> Parameter ist kein untergeordneter Knoten des Kontextknotens oder wenn die Aktion in einer ungültigen Struktur führen würde, wird das Entfernen nicht ausgeführt, und eine Fehlermeldung wird angezeigt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-182">
              <para>If the node specified in the <paramref name="Child" /> parameter is not a child of the context node or if the action would result in an invalid tree, the removal is not performed and an error message is displayed.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceChildNode">
      <MemberSignature Language="C#" Value="public void ReplaceChildNode (Microsoft.Office.Core.CustomXMLNode OldNode, string Name = &quot;&quot;, string NamespaceURI = &quot;&quot;, Microsoft.Office.Core.MsoCustomXMLNodeType NodeType = Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement, string NodeValue = &quot;&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplaceChildNode([in]class Microsoft.Office.Core.CustomXMLNode OldNode, [in]string Name, [in]string NamespaceURI, [in]valuetype Microsoft.Office.Core.MsoCustomXMLNodeType NodeType, [in]string NodeValue) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.CustomXMLNode.ReplaceChildNode(Microsoft.Office.Core.CustomXMLNode,System.String,System.String,Microsoft.Office.Core.MsoCustomXMLNodeType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReplaceChildNode (OldNode As CustomXMLNode, Optional Name As String = &quot;&quot;, Optional NamespaceURI As String = &quot;&quot;, Optional NodeType As MsoCustomXMLNodeType = Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement, Optional NodeValue As String = &quot;&quot;)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809370)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="OldNode" Type="Microsoft.Office.Core.CustomXMLNode" />
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="NamespaceURI" Type="System.String" />
        <Parameter Name="NodeType" Type="Microsoft.Office.Core.MsoCustomXMLNodeType" />
        <Parameter Name="NodeValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="OldNode">
          <span data-ttu-id="e0333-183">Stellt den unterordneten Knoten dar, der ersetzt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-183">Represents the child node to be replaced.</span>
          </span>
        </param>
        <param name="Name">
          <span data-ttu-id="e0333-184">Stellt den Basisnamen des hinzuzufügenden Elements dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-184">Represents the base name of the element to be added.</span>
          </span>
        </param>
        <param name="NamespaceURI">
          <span data-ttu-id="e0333-185">Stellt den Namespace des hinzuzufügenden Elements dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-185">Represents the namespace of the element to be added.</span>
          </span>
          <span data-ttu-id="e0333-186">Dieser Parameter ist erforderlich, wenn das Hinzufügen von Knoten vom Typ <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" /> oder <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeAttribute" />, andernfalls wird ignoriert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-186">This parameter is required if adding nodes of type <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" /> or <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeAttribute" />, otherwise it is ignored.</span>
          </span>
        </param>
        <param name="NodeType">
          <span data-ttu-id="e0333-187">Gibt den Typ des hinzuzufügenden Knotens an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-187">Specifies the type of node to add.</span>
          </span>
          <span data-ttu-id="e0333-188">Wenn der Parameter nicht angegeben wird, wird angenommen, werden vom Typ <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-188">If the parameter is not specified, it is assumed to be of type <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" />.</span>
          </span>
        </param>
        <param name="NodeValue">
          <span data-ttu-id="e0333-p126">Wird zum Festlegen des Werts des hinzugefügten Knotens für die Knoten verwendet, die Text zulassen. Lässt der Knoten keinen Text zu, wird der Parameter ignoriert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-p126">Used to set the value of the node to be added for those nodes that allow text. If the node doesn’t allow text, the parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e0333-191">Entfernt den angegebenen untergeordneten Knoten (und dessen Unterstruktur) aus der Hauptstruktur und ersetzt ihn an derselben Stelle durch einen anderen Knoten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-191">Removes the specified child node (and its subtree) from the main tree, and replaces it with a different  node in the same location.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="e0333-192">
            <para>Wenn die <paramref name="OldNode" /> Parameter ist kein untergeordneter Knoten des Kontextknotens oder wenn der Vorgang zu einer ungültigen Struktur führen würde, das Ersetzen nicht ausgeführt, und eine Fehlermeldung wird angezeigt. Darüber hinaus in dem Fall, in der hinzuzufügenden Knotens bereits vorhanden ist, das Ersetzen nicht ausgeführt, und eine Fehlermeldung wird angezeigt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-192">
              <para>If the <paramref name="OldNode" /> parameter is not a child of the context node  or if the operation would result in an invalid tree structure, the replacement is not performed and an error message is displayed. In addition, in a case where the node to be added already exists, the replacement is not performed and an error message is displayed. </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceChildSubtree">
      <MemberSignature Language="C#" Value="public void ReplaceChildSubtree (string XML, Microsoft.Office.Core.CustomXMLNode OldNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplaceChildSubtree([in]string XML, [in]class Microsoft.Office.Core.CustomXMLNode OldNode) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.CustomXMLNode.ReplaceChildSubtree(System.String,Microsoft.Office.Core.CustomXMLNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReplaceChildSubtree (XML As String, OldNode As CustomXMLNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReplaceChildSubtree(System::String ^ XML, Microsoft::Office::Core::CustomXMLNode ^ OldNode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809371)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XML" Type="System.String" />
        <Parameter Name="OldNode" Type="Microsoft.Office.Core.CustomXMLNode" />
      </Parameters>
      <Docs>
        <param name="XML">
          <span data-ttu-id="e0333-193">Stellt die hinzuzufügende Unterstruktur dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-193">Represents the subtree to be added.</span>
          </span>
        </param>
        <param name="OldNode">
          <span data-ttu-id="e0333-194">Stellt den unterordneten Knoten dar, der ersetzt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-194">Represents the child node to be replaced.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e0333-195">Entfernt den angegebenen Knoten (und dessen Unterstruktur) aus der Hauptstruktur und ersetzt ihn an derselben Stelle durch eine andere Unterstruktur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-195">Removes the specified node (and its subtree) from the main tree, and replaces it with a different subtree in the same location.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="e0333-196">
            <para>Wenn der Vorgang zu einer ungültigen Struktur führen würde, der Vorgang nicht ausgeführt, und eine Fehlermeldung wird angezeigt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-196">
              <para>If the operation would result in an invalid tree  structure, the replacement operation is not performed and an error message is displayed. </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectNodes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CustomXMLNodes SelectNodes (string XPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Core.CustomXMLNodes SelectNodes([in]string XPath) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.CustomXMLNode.SelectNodes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectNodes (XPath As String) As CustomXMLNodes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Core::CustomXMLNodes ^ SelectNodes(System::String ^ XPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809372)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CustomXMLNodes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="XPath">
          <span data-ttu-id="e0333-197">Enthält einen XPath-Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-197">Contains an XPath expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e0333-198">Markiert eine Auflistung von Knoten mit einem XPath-Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-198">Selects a collection of nodes matching an XPath expression.</span>
          </span>
          <span data-ttu-id="e0333-199">Diese Methode unterscheidet sich von der <see cref="M:Microsoft.Office.Core._CustomXMLPart.SelectNodes(System.String)" /> -Methode in, dass der XPath-Ausdruck ausgewertet wird mit dem Knoten "Ausdruck" als Kontextknoten ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-199">This method differs from the <see cref="M:Microsoft.Office.Core._CustomXMLPart.SelectNodes(System.String)" /> method in that the XPath expression will be evaluated starting with the 'expression' node as the context node.</span>
          </span>
        </summary>
        <returns>
          <see cref="T:Microsoft.Office.Core.CustomXMLNodes" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectSingleNode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CustomXMLNode SelectSingleNode (string XPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Core.CustomXMLNode SelectSingleNode([in]string XPath) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.CustomXMLNode.SelectSingleNode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectSingleNode (XPath As String) As CustomXMLNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Core::CustomXMLNode ^ SelectSingleNode(System::String ^ XPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809373)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CustomXMLNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="XPath">
          <span data-ttu-id="e0333-200">Enthält einen XPath-Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-200">Contains an XPath expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e0333-201">Ein einzelner Knoten aus einer Auflistung mit einem XPath-Ausdruck ausgewählt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-201">Selects a single node from a collection matching an XPath expression.</span>
          </span>
          <span data-ttu-id="e0333-202">Diese Methode unterscheidet sich von der <see cref="M:Microsoft.Office.Core._CustomXMLPart.SelectSingleNode(System.String)" /> -Methode in, dass der XPath-Ausdruck ausgewertet wird mit dem Knoten "Ausdruck" als Kontextknoten ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-202">This method differs from the <see cref="M:Microsoft.Office.Core._CustomXMLPart.SelectSingleNode(System.String)" /> method in that the XPath expression will be evaluated starting with the 'expression' node as the context node.</span>
          </span>
        </summary>
        <returns>
          <see cref="T:Microsoft.Office.Core.CustomXMLNode" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.CustomXMLNode.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809359)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809359)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1610809359)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0333-p129">Ruft den Text für den aktuellen Knoten ab oder legt ihn fest. Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-p129">Gets or sets the text for the current node. Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0333-205">
            <b>String</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-205">
              <b>String</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XML">
      <MemberSignature Language="C#" Value="public string XML { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XML" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.CustomXMLNode.XML" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XML As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XML { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809362)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809362)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0333-p130">Ruft die XML-Darstellung des aktuellen Knotens und (soweit vorhanden) der untergeordneten Knoten ab. Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-p130">Gets the XML representation of the current node and its children, if any exist. Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0333-208">
            <b>String</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-208">
              <b>String</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XPath">
      <MemberSignature Language="C#" Value="public string XPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.CustomXMLNode.XPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809361)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0333-p131">Ruft eine <b>Zeichenfolge</b> mit der kanonische XPath-Ausdruck für den aktuellen Knoten ab. Wenn der Knoten nicht mehr in das Modell DOM (Document Object) ist, gibt die Eigenschaft eine Fehlermeldung angezeigt. Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-p131">Gets a <b>String</b> with the canonicalized XPath for the current node. If the node is no longer in the Document Object Model (DOM), the property returns an error message. Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0333-212">
            <b>String</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e0333-212">
              <b>String</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>