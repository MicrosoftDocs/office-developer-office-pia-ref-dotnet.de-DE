<Type Name="TextRange2" FullName="Microsoft.Office.Core.TextRange2">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e13cb597db4d10f29174ed725d2871ab3848976a" />
    <Meta Name="ms.sourcegitcommit" Value="f41bc3cdd2c00b9a51a4340ac823a9e309633924" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20660506" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface TextRange2 : Microsoft.Office.Core._IMsoDispObj, System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract TextRange2 implements class Microsoft.Office.Core._IMsoDispObj, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Core.TextRange2" />
  <TypeSignature Language="VB.NET" Value="Public Interface TextRange2&#xA;Implements _IMsoDispObj, IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class TextRange2 : Microsoft::Office::Core::_IMsoDispObj, System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>office</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Office.Core._IMsoDispObj</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000C0397-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="72563-101">Stellt den Textrahmen in <b>Shape-</b> oder <b>ShapeRange</b> -Objekten dar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="72563-101">Represents the text frame in a <b>Shape</b> or <b>ShapeRange</b> objects.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="72563-102">
        <para>Dieses Objekt enthält den Text im Textrahmen sowie die Eigenschaften und Methoden, die die Ausrichtung und Verankerung des Textrahmens steuern. Verwenden Sie die <b>TextFrame2</b> -Eigenschaft zum Zurückgeben einer <see cref="T:Microsoft.Office.Core.TextFrame2" /> Objekt.</para>
        <para />
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="72563-102">
          <para>This object contains the text in the text frame as well as the properties and methods that control the alignment and anchoring of the text frame. Use the <b>TextFrame2</b> property to return a <see cref="T:Microsoft.Office.Core.TextFrame2" /> object.</para>
          <para />
        </span>
      </span>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddPeriods">
      <MemberSignature Language="C#" Value="public void AddPeriods ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddPeriods() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.TextRange2.AddPeriods" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPeriods ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPeriods();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(29)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="72563-103">Fügt Punkte (.) auf der rechten Seite des Texts im enthaltenen <see cref="T:Microsoft.Office.Core.TextFrame2" /> -Objekt für Sprachen von links nach rechts und auf der linken Seite für rechts-nach-links-Sprachen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-103">Adds period (.) punctuation to the right side of the text contained in <see cref="T:Microsoft.Office.Core.TextFrame2" /> object for left-to-right languages and on the left side for right-to-left languages.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public object Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.TextRange2.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Application { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core._IMsoDispObj.Application</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610743808)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610743808)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72563-104">Ohne einen Objektbezeichner verwendet wird, gibt diese Eigenschaft ein <b>Application</b> -Objekt, das die aktuelle Instanz von Microsoft Office-Anwendung darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-104">Used without an object qualifier, this property returns an <b>Application</b> object that represents the current instance of the Microsoft Office application.</span>
          </span>
          <span data-ttu-id="72563-105">Ohne einen Objektbezeichner verwendet wird, gibt diese Eigenschaft ein <b>Application</b> -Objekt, das den Ersteller der stellt die <see cref="T:Microsoft.Office.Core.TextFrame2" /> Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-105">Used with an object qualifier, this property returns an <b>Application</b> object that represents the creator of the <see cref="T:Microsoft.Office.Core.TextFrame2" /> object.</span>
          </span>
          <span data-ttu-id="72563-106">Bei Verwendung mit einem OLE-Objekt wird die Anwendung des Objekts zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-106">When used with an OLE Automation object, it returns the object's application.</span>
          </span>
          <span data-ttu-id="72563-107">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-107">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72563-108">
            <b>Objekt</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-108">
              <b>Object</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BoundHeight">
      <MemberSignature Language="C#" Value="public float BoundHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 BoundHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.TextRange2.BoundHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BoundHeight As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float BoundHeight { float get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(17)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(17)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72563-p102">Ruft die Höhe (in Punkt) des umgebenden Textfelds für den angegebenen Text ab. Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-p102">Gets the height, in points, of the text bounding box for the specified text. Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72563-111">
            <b>Single</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-111">
              <b>Single</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="72563-112">
            <para>Der Text umgebenden Feld ist nicht identisch mit der <see cref="T:Microsoft.Office.Core.TextFrame" /> Objekt.  Das <b>TextFrame</b> -Objekt stellt den Container, in dem der Text befinden kann.  Das umgebende Textfeld stellt sofort den Text umgebenden Umkreisnetzwerk.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-112">
              <para>The text bounding box is not the same as the <see cref="T:Microsoft.Office.Core.TextFrame" /> object.  The <b>TextFrame</b> object represents the container in which the text can reside.  The text bounding box represents the perimeter immediately surrounding the text.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BoundLeft">
      <MemberSignature Language="C#" Value="public float BoundLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 BoundLeft" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.TextRange2.BoundLeft" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BoundLeft As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float BoundLeft { float get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(14)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(14)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72563-p103">Ruft die linke Koordinate (in Punkt) des umgebenden Textfelds für den angegebenen Text ab. Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-p103">Gets the left coordinate, in points, of the text bounding box for the specified text. Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72563-115">
            <b>Single</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-115">
              <b>Single</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="72563-116">
            <para>Der Text umgebenden Feld ist nicht identisch mit der <see cref="T:Microsoft.Office.Core.TextFrame" /> Objekt.  Das <b>TextFrame</b> -Objekt stellt den Container, in dem der Text befinden kann.  Das umgebende Textfeld stellt sofort den Text umgebenden Umkreisnetzwerk.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-116">
              <para>The text bounding box is not the same as the <see cref="T:Microsoft.Office.Core.TextFrame" /> object.  The <b>TextFrame</b> object represents the container in which the text can reside.  The text bounding box represents the perimeter immediately surrounding the text.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BoundTop">
      <MemberSignature Language="C#" Value="public float BoundTop { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 BoundTop" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.TextRange2.BoundTop" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BoundTop As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float BoundTop { float get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(15)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(15)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72563-p104">Ruft die obere Koordinate (in Punkt) des umgebenden Textfelds für den angegebenen Text ab. Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-p104">Gets the top coordinate, in points, of the text bounding box for the specified text. Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72563-119">
            <b>Single</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-119">
              <b>Single</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="72563-120">
            <para>Der Text umgebenden Feld ist nicht identisch mit der <see cref="T:Microsoft.Office.Core.TextFrame" /> Objekt.  Das <b>TextFrame</b> -Objekt stellt den Container, in dem der Text befinden kann.  Das umgebende Textfeld stellt sofort den Text umgebenden Umkreisnetzwerk.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-120">
              <para>The text bounding box is not the same as the <see cref="T:Microsoft.Office.Core.TextFrame" /> object.  The <b>TextFrame</b> object represents the container in which the text can reside.  The text bounding box represents the perimeter immediately surrounding the text.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BoundWidth">
      <MemberSignature Language="C#" Value="public float BoundWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 BoundWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.TextRange2.BoundWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BoundWidth As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float BoundWidth { float get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(16)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72563-p105">Ruft die Breite (in Punkt) des umgebenden Textfelds für den angegebenen Text ab. Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-p105">Gets the width, in points, of the text bounding box for the specified text. Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72563-123">
            <b>Single</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-123">
              <b>Single</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="72563-124">
            <para>Der Text umgebenden Feld ist nicht identisch mit der <see cref="T:Microsoft.Office.Core.TextFrame" /> Objekt.  Das <b>TextFrame</b> -Objekt stellt den Container, in dem der Text befinden kann.  Das umgebende Textfeld stellt sofort den Text umgebenden Umkreisnetzwerk.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-124">
              <para>The text bounding box is not the same as the <see cref="T:Microsoft.Office.Core.TextFrame" /> object.  The <b>TextFrame</b> object represents the container in which the text can reside.  The text bounding box represents the perimeter immediately surrounding the text.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeCase">
      <MemberSignature Language="C#" Value="public void ChangeCase (Microsoft.Office.Core.MsoTextChangeCase Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChangeCase([in]valuetype Microsoft.Office.Core.MsoTextChangeCase Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.TextRange2.ChangeCase(Microsoft.Office.Core.MsoTextChangeCase)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeCase (Type As MsoTextChangeCase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ChangeCase(Microsoft::Office::Core::MsoTextChangeCase Type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(28)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Core.MsoTextChangeCase" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="72563-125">Gibt die Art der Änderung für den Text an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-125">Specifies the type of change to make to the text.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72563-126">Ändert die Groß-/Kleinschreibung einen <see cref="T:Microsoft.Office.Core.TextRange2" /> Objekt, das einen der Werte in der <see cref="T:Microsoft.Office.Core.MsoTextChangeCase" /> Enumeration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-126">Changes the case of a <see cref="T:Microsoft.Office.Core.TextRange2" /> object to one of  the values in the <see cref="T:Microsoft.Office.Core.MsoTextChangeCase" /> enumeration.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="72563-127">
            <para>Beispiele für <b>MsoTextChangeCase</b> -Aufzählung <see cref="F:Microsoft.Office.Core.MsoTextChangeCase.msoCaseLower" />, <see cref="F:Microsoft.Office.Core.MsoTextChangeCase.msoCaseUpper" />, und <see cref="F:Microsoft.Office.Core.MsoTextChangeCase.msoCaseTitle" />.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-127">
              <para>Examples of <b>MsoTextChangeCase</b> enumeration include <see cref="F:Microsoft.Office.Core.MsoTextChangeCase.msoCaseLower" />, <see cref="F:Microsoft.Office.Core.MsoTextChangeCase.msoCaseUpper" />, and <see cref="F:Microsoft.Office.Core.MsoTextChangeCase.msoCaseTitle" />.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Characters">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.TextRange2 Characters[int Start = -1, int Length = -1] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.TextRange2 Characters(int32, int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.TextRange2.Characters(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Characters(Optional Start As Integer = -1, Optional Length As Integer = -1) As TextRange2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::TextRange2 ^ Characters[int, int] { Microsoft::Office::Core::TextRange2 ^ get(int Start, int Length); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(7)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.TextRange2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Start" Type="System.Int32" />
        <Parameter Name="Length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Start">
          <span data-ttu-id="72563-128">Das erste Zeichen im zurückgegebenen Bereich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-128">The first character in the returned range.</span>
          </span>
        </param>
        <param name="Length">
          <span data-ttu-id="72563-129">Die Anzahl der zurückzugebenden Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-129">The number of characters to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72563-130">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-130">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.TextRange2" />
        </value>
        <remarks>
          <span data-ttu-id="72563-131">
            <para>Wenn beide <paramref name="Start" /> und <paramref name="Length" /> sind nicht angegeben ist, der zurückgegebene Bereich beginnt mit dem ersten Zeichen und endet mit dem letzten Absatz im angegebenen Bereich.</para>
            <para>Wenn <paramref name="Start" /> wird angegeben, aber <paramref name="Length" /> wird Length angegeben, enthält der zurückgegebene Bereich genau ein Zeichen.</para>
            <para>Wenn <paramref name="Length" /> wird angegeben, aber <paramref name="Start" /> wird Length angegeben, beginnt der zurückgegebene Bereich mit dem ersten Zeichen des festgelegten Bereichs.</para>
            <para>Wenn <paramref name="Start" /> ist größer als die Anzahl der Zeichen im angegebenen Text, der beginnt der zurückgegebene Bereich mit dem letzten Zeichen im angegebenen Bereich.</para>
            <para>Wenn <paramref name="Length" /> ist größer als die Anzahl der Zeichen vom angegebenen starten Zeichen bis zum Ende des Texts, enthält der zurückgegebene Bereich alle diese Zeichen.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-131">
              <para>If both <paramref name="Start" /> and <paramref name="Length" /> are omitted, the returned range starts with the first character and ends with the last paragraph in the specified range.</para>
              <para>If <paramref name="Start" /> is specified but <paramref name="Length" /> is omitted, the returned range contains one character.</para>
              <para>If <paramref name="Length" /> is specified but <paramref name="Start" /> is omitted, the returned range starts with the first character in the specified range.</para>
              <para>If <paramref name="Start" /> is greater than the number of characters in the specified text, the returned range starts with the last character in the specified range.</para>
              <para>If <paramref name="Length" /> is greater than the number of characters from the specified starting character to the end of the text, the returned range contains all those characters.</para>
              <para />
            </span>
          </span>
        </remarks>
        <example>
          <span data-ttu-id="72563-132">
            <para>In diesem Beispiel wird der Text für Form 2 von Folie 1 der aktiven Präsentation festgelegt und anschließend dem zweiten Zeichen eine Tiefstellung um 20 Prozent zugewiesen.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-132">
              <para>This example sets the text for shape two on slide one in the active presentation and then makes the second character a subscript character with a 20-percent offset.</para>
            </span>
          </span>
        </example>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.TextRange2.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="72563-133">Kopiert eine <see cref="T:Microsoft.Office.Core.TextRange2" /> Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-133">Copies a <see cref="T:Microsoft.Office.Core.TextRange2" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.TextRange2.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72563-134">Ruft die Anzahl der Elemente in der <see cref="T:Microsoft.Office.Core.TextRange2" /> Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-134">Gets the number of items in the  <see cref="T:Microsoft.Office.Core.TextRange2" /> collection.</span>
          </span>
          <span data-ttu-id="72563-135">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-135">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72563-136">
            <b>Integer</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-136">
              <b>Integer</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public int Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.TextRange2.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Creator { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core._IMsoDispObj.Creator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610743809)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610743809)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72563-137">Ruft eine 32-Bit-Ganzzahl, die die Anwendung, in angibt der <see cref="T:Microsoft.Office.Core.TextRange2" /> -Objekt erstellt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-137">Gets a 32-bit integer that indicates the application in which the  <see cref="T:Microsoft.Office.Core.TextRange2" /> object was created.</span>
          </span>
          <span data-ttu-id="72563-138">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-138">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72563-139">
            <b>Integer</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-139">
              <b>Integer</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public void Cut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cut() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.TextRange2.Cut" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cut();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="72563-140">Entfernt einen Teil oder den gesamten Text aus einem Textbereich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-140">Removes a portion or all of the text from a range of text.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.TextRange2.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(25)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="72563-141">Löscht eine <see cref="T:Microsoft.Office.Core.TextRange2" /> Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-141">Deletes a <see cref="T:Microsoft.Office.Core.TextRange2" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.TextRange2 Find (string FindWhat, int After = 0, Microsoft.Office.Core.MsoTriState MatchCase = Microsoft.Office.Core.MsoTriState.msoFalse, Microsoft.Office.Core.MsoTriState WholeWords = Microsoft.Office.Core.MsoTriState.msoFalse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Core.TextRange2 Find([in]string FindWhat, [in]int32 After, [in]valuetype Microsoft.Office.Core.MsoTriState MatchCase, [in]valuetype Microsoft.Office.Core.MsoTriState WholeWords) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.TextRange2.Find(System.String,System.Int32,Microsoft.Office.Core.MsoTriState,Microsoft.Office.Core.MsoTriState)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (FindWhat As String, Optional After As Integer = 0, Optional MatchCase As MsoTriState = Microsoft.Office.Core.MsoTriState.msoFalse, Optional WholeWords As MsoTriState = Microsoft.Office.Core.MsoTriState.msoFalse) As TextRange2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(31)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.TextRange2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FindWhat" Type="System.String" />
        <Parameter Name="After" Type="System.Int32" />
        <Parameter Name="MatchCase" Type="Microsoft.Office.Core.MsoTriState" />
        <Parameter Name="WholeWords" Type="Microsoft.Office.Core.MsoTriState" />
      </Parameters>
      <Docs>
        <param name="FindWhat">
          <span data-ttu-id="72563-142">Enthält den gesuchten Text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-142">Contains the text to find.</span>
          </span>
        </param>
        <param name="After">
          <span data-ttu-id="72563-143">Gibt die Position im Textbereich an, an der die Suche beginnen soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-143">Specifies the point in the text range to start the search.</span>
          </span>
        </param>
        <param name="MatchCase">
          <span data-ttu-id="72563-144">Gibt an, ob der Zieltext genau mit der Groß-/Kleinschreibung des Suchtexts übereinstimmen muss.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-144">Specifies if the target text must exactly match the case of the search text.</span>
          </span>
        </param>
        <param name="WholeWords">
          <span data-ttu-id="72563-145">Gibt an, dass nur ganze Wörter gesucht werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-145">Specifies that only whole words will be searched.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72563-146">Sucht eine <see cref="T:Microsoft.Office.Core.TextRange2" /> Objekt nach einer Teilmenge von Text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-146">Searches a <see cref="T:Microsoft.Office.Core.TextRange2" /> object for  a subset of text.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72563-147">
            <b>TextRange2</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-147">
              <b>TextRange2</b>
            </span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Font2 Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Font2 Font" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.TextRange2.Font" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Font As Font2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::Font2 ^ Font { Microsoft::Office::Core::Font2 ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(11)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(11)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Font2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72563-148">Gibt ein <b>Font</b> -Objekt zurück, stellt zeichenformatierung für die <see cref="T:Microsoft.Office.Core.TextRange2" /> Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-148">Returns a <b>Font</b> object that represents character formatting for the <see cref="T:Microsoft.Office.Core.TextRange2" /> object.</span>
          </span>
          <span data-ttu-id="72563-149">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-149">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72563-150">
            <b>Font</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-150">
              <b>Font</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.TextRange2.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertAfter">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.TextRange2 InsertAfter (string NewText = &quot;&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Core.TextRange2 InsertAfter([in]string NewText) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.TextRange2.InsertAfter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertAfter (Optional NewText As String = &quot;&quot;) As TextRange2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(19)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.TextRange2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="NewText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="NewText">
          <span data-ttu-id="72563-151">Enthält den einzufügenden Text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-151">Contains the text to be inserted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72563-152">Fügt Text rechts vom vorhandenen Text in der <see cref="T:Microsoft.Office.Core.TextRange2" /> Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-152">Inserts text to the right of the existing text   in  the <see cref="T:Microsoft.Office.Core.TextRange2" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72563-153">
            <b>TextRange2</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-153">
              <b>TextRange2</b>
            </span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertBefore">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.TextRange2 InsertBefore (string NewText = &quot;&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Core.TextRange2 InsertBefore([in]string NewText) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.TextRange2.InsertBefore(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertBefore (Optional NewText As String = &quot;&quot;) As TextRange2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(20)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.TextRange2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="NewText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="NewText">
          <span data-ttu-id="72563-154">Enthält den einzufügenden Text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-154">Contains the text to be inserted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72563-155">Fügt Text links vom vorhandenen Text in der <see cref="T:Microsoft.Office.Core.TextRange2" /> Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-155">Inserts text to the left of the existing text in the <see cref="T:Microsoft.Office.Core.TextRange2" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72563-156">
            <b>TextRange2</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-156">
              <b>TextRange2</b>
            </span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertChartField">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.TextRange2 InsertChartField (Microsoft.Office.Core.MsoChartFieldType ChartFieldType, string Formula = &quot;&quot;, int Position = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Core.TextRange2 InsertChartField([in]valuetype Microsoft.Office.Core.MsoChartFieldType ChartFieldType, [in]string Formula, [in]int32 Position) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.TextRange2.InsertChartField(Microsoft.Office.Core.MsoChartFieldType,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertChartField (ChartFieldType As MsoChartFieldType, Optional Formula As String = &quot;&quot;, Optional Position As Integer = -1) As TextRange2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(38)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.TextRange2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ChartFieldType" Type="Microsoft.Office.Core.MsoChartFieldType" />
        <Parameter Name="Formula" Type="System.String" />
        <Parameter Name="Position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ChartFieldType">
          <span data-ttu-id="72563-157">Enthält den einzufügenden Text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-157">Contains the text to be inserted.</span>
          </span>
        </param>
        <param name="Formula">
          <span data-ttu-id="72563-158">Gibt eine Zelle (oder einen) an, ob die <see cref="Microsoft.Office.Core.MsoChartFieldFormula" /> Konstante übergeben wird die <paramref name="ChartFieldType" /> Parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-158">Specifies a cell (or range) if the <see cref="Microsoft.Office.Core.MsoChartFieldFormula" /> constant is passed in for the <paramref name="ChartFieldType" /> parameter.</span>
          </span>
        </param>
        <param name="Position">
          <span data-ttu-id="72563-159">Gibt die Position des Zeichens, an das Diagramm-Feld eingefügt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-159">Specifies the character position where the chart field is inserted.</span>
          </span>
          <span data-ttu-id="72563-160">Standardmäßig wird das Feld an das Ende des Texts anfügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-160">The default is to append the field to the end of the text.</span>
          </span>
          <span data-ttu-id="72563-161">Wenn der Positionswert außerhalb des Bereichs ist, wird der Standardwert verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-161">If the position value is out of range, the default is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72563-162">Fügt ein Feld in den Textkörper einer Bezeichnung Daten in einem Diagramm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-162">Inserts a field into the body of a data label in a chart.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72563-163">
            <b>TextRange2</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-163">
              <b>TextRange2</b>
            </span>
          </span>
        </returns>
        <remarks>
          <span data-ttu-id="72563-164">
            <para>Diese Methode gilt nur für datenbeschriftungen in einem Diagramm. Durch Aufrufen dieser Methode auf eine beliebige andere Art von <a href="a6a59c9b-9b64-c1e2-2e98-a1f99025c877.htm">Microsoft.Office.Core.TextRange2</a></para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-164">
              <para>This method applies only to data labels in a chart. Calling this method on any other kind of <a href="a6a59c9b-9b64-c1e2-2e98-a1f99025c877.htm">Microsoft.Office.Core.TextRange2</a></para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertSymbol">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.TextRange2 InsertSymbol (string FontName, int CharNumber, Microsoft.Office.Core.MsoTriState Unicode = Microsoft.Office.Core.MsoTriState.msoFalse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Core.TextRange2 InsertSymbol([in]string FontName, [in]int32 CharNumber, [in]valuetype Microsoft.Office.Core.MsoTriState Unicode) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.TextRange2.InsertSymbol(System.String,System.Int32,Microsoft.Office.Core.MsoTriState)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertSymbol (FontName As String, CharNumber As Integer, Optional Unicode As MsoTriState = Microsoft.Office.Core.MsoTriState.msoFalse) As TextRange2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(21)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.TextRange2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FontName" Type="System.String" />
        <Parameter Name="CharNumber" Type="System.Int32" />
        <Parameter Name="Unicode" Type="Microsoft.Office.Core.MsoTriState" />
      </Parameters>
      <Docs>
        <param name="FontName">
          <span data-ttu-id="72563-165">Der Name des Schriftsatzes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-165">The name of the font set.</span>
          </span>
        </param>
        <param name="CharNumber">
          <span data-ttu-id="72563-166">Die Nummer des Symbols.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-166">The number of the symbol.</span>
          </span>
        </param>
        <param name="Unicode">
          <span data-ttu-id="72563-167">Gibt an, ob der Wert des Symbols als Unicode-Wert angegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-167">Indicates whether the value of the symbol is specified as a unicode value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72563-168">Fügt ein Symbol aus dem angegebenen Schriftsatz in den Textbereich dargestellt durch die <see cref="T:Microsoft.Office.Core.TextRange2" /> Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-168">Inserts a symbol from the specified font set into the range of text represented by the <see cref="T:Microsoft.Office.Core.TextRange2" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72563-169">
            <b>TextRange2</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-169">
              <b>TextRange2</b>
            </span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.TextRange2 Item (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Core.TextRange2 Item([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.TextRange2.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Item (Index As Object) As TextRange2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Core::TextRange2 ^ Item(System::Object ^ Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.TextRange2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="72563-170">Die Indexnummer des Textbereichs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-170">The index number of the text range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72563-171">Ruft den Textbereich durch die Indexnummer ab, der die <see cref="T:Microsoft.Office.Core.TextRange2" /> Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-171">Gets the range of text specified by the index number from the <see cref="T:Microsoft.Office.Core.TextRange2" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72563-172">
            <b>TextRange2</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-172">
              <b>TextRange2</b>
            </span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageID">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoLanguageID LanguageID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoLanguageID LanguageID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.TextRange2.LanguageID" />
      <MemberSignature Language="VB.NET" Value="Public Property LanguageID As MsoLanguageID" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoLanguageID LanguageID { Microsoft::Office::Core::MsoLanguageID get(); void set(Microsoft::Office::Core::MsoLanguageID value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(34)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(34)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(34)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoLanguageID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72563-173">Dient zum Abrufen oder Festlegen der <see cref="T:Microsoft.Office.Core.MsoLanguageID" /> Wert der <see cref="T:Microsoft.Office.Core.TextRange2" /> Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-173">Gets or sets the <see cref="T:Microsoft.Office.Core.MsoLanguageID" /> value of the <see cref="T:Microsoft.Office.Core.TextRange2" /> object.</span>
          </span>
          <span data-ttu-id="72563-174">Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-174">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72563-175">
            <b>MsoLanguageID</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-175">
              <b>MsoLanguageID</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.TextRange2.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(12)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(12)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72563-176">Ruft die Länge eines Textbereichs ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-176">Gets the length of a text range.</span>
          </span>
          <span data-ttu-id="72563-177">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-177">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72563-178">
            <b>Integer</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-178">
              <b>Integer</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lines">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.TextRange2 Lines[int Start = -1, int Length = -1] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.TextRange2 Lines(int32, int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.TextRange2.Lines(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Lines(Optional Start As Integer = -1, Optional Length As Integer = -1) As TextRange2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::TextRange2 ^ Lines[int, int] { Microsoft::Office::Core::TextRange2 ^ get(int Start, int Length); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.TextRange2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Start" Type="System.Int32" />
        <Parameter Name="Length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Start">
          <span data-ttu-id="72563-179">Die erste Zeile im zurückgegebenen Bereich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-179">The first line in the returned range.</span>
          </span>
        </param>
        <param name="Length">
          <span data-ttu-id="72563-180">Die Anzahl der zurückzugebenden Zeilen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-180">The number of lines to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72563-181">Gibt zurück, das die angegebene Untermenge von Textzeilen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-181">Returns the specified subset of text lines.</span>
          </span>
          <span data-ttu-id="72563-182">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-182">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.TextRange2" />
        </value>
        <remarks>
          <span data-ttu-id="72563-183">
            <para>Wenn beide <paramref name="Start" /> und <paramref name="Length" /> sind nicht angegeben ist, der zurückgegebene Bereich beginnt mit der ersten Zeile und endet mit dem letzten Absatz im angegebenen Bereich.</para>
            <para>Wenn <paramref name="Start" /> wird angegeben, aber <paramref name="Length" /> wird Length angegeben, enthält der zurückgegebene Bereich genau eine Zeile.</para>
            <para>Wenn <paramref name="Length" /> wird angegeben, aber <paramref name="Start" /> wird Length angegeben, beginnt der zurückgegebene Bereich mit der ersten Zeile im angegebenen Bereich.</para>
            <para>Wenn <paramref name="Start" /> ist größer als die Anzahl der Zeilen im angegebenen Text, der zurückgegebene Bereich beginnt mit der letzten Zeile des festgelegten Bereichs.</para>
            <para>Wenn <paramref name="Length" /> ist größer als die Anzahl der Zeilen von der angegebenen Anfangszeile bis zum Ende des Texts, enthält der zurückgegebene Bereich alle diese Zeilen.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-183">
              <para>If both <paramref name="Start" /> and <paramref name="Length" /> are omitted, the returned range starts with the first line and ends with the last paragraph in the specified range.</para>
              <para>If <paramref name="Start" /> is specified but <paramref name="Length" /> is omitted, the returned range contains one line.</para>
              <para>If <paramref name="Length" /> is specified but <paramref name="Start" /> is omitted, the returned range starts with the first line in the specified range.</para>
              <para>If <paramref name="Start" /> is greater than the number of lines in the specified text, the returned range starts with the last line in the specified range.</para>
              <para>If <paramref name="Length" /> is greater than the number of lines from the specified starting line to the end of the text, the returned range contains all those lines.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LtrRun">
      <MemberSignature Language="C#" Value="public void LtrRun ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LtrRun() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.TextRange2.LtrRun" />
      <MemberSignature Language="VB.NET" Value="Public Sub LtrRun ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LtrRun();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(36)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="72563-184">Gibt eine <see cref="T:Microsoft.Office.Core.TextRange2" /> führt-Objekt, das die angegebene Untermenge von links-nach-rechts-Text darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-184">Returns a <see cref="T:Microsoft.Office.Core.TextRange2" /> object that represents the specified subset of left-to-right text runs.</span>
          </span>
          <span data-ttu-id="72563-185">Einen Textlauf besteht aus einem Bereich von Zeichen, die dieselben Schriftattribute aufweisen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-185">A text run consists of a range of characters that share the same font attributes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MathZones">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.TextRange2 MathZones[int Start = -1, int Length = -1] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.TextRange2 MathZones(int32, int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.TextRange2.MathZones(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MathZones(Optional Start As Integer = -1, Optional Length As Integer = -1) As TextRange2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::TextRange2 ^ MathZones[int, int] { Microsoft::Office::Core::TextRange2 ^ get(int Start, int Length); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(37)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(37)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.TextRange2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Start" Type="System.Int32" />
        <Parameter Name="Length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Start">To be added.</param>
        <param name="Length">To be added.</param>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParagraphFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.ParagraphFormat2 ParagraphFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.ParagraphFormat2 ParagraphFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.TextRange2.ParagraphFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParagraphFormat As ParagraphFormat2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::ParagraphFormat2 ^ ParagraphFormat { Microsoft::Office::Core::ParagraphFormat2 ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(10)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(10)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.ParagraphFormat2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72563-186">Gibt die absatzformatierung für den angegebenen Text zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-186">Returns the paragraph formatting for the specified text.</span>
          </span>
          <span data-ttu-id="72563-187">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-187">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.ParagraphFormat2" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paragraphs">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.TextRange2 Paragraphs[int Start = -1, int Length = -1] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.TextRange2 Paragraphs(int32, int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.TextRange2.Paragraphs(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Paragraphs(Optional Start As Integer = -1, Optional Length As Integer = -1) As TextRange2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::TextRange2 ^ Paragraphs[int, int] { Microsoft::Office::Core::TextRange2 ^ get(int Start, int Length); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.TextRange2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Start" Type="System.Int32" />
        <Parameter Name="Length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Start">
          <span data-ttu-id="72563-188">Der erste Absatz im zurückgegebenen Bereich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-188">The first paragraph in the returned range.</span>
          </span>
        </param>
        <param name="Length">
          <span data-ttu-id="72563-189">Die Anzahl der zurückzugebenden Absätze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-189">The number of paragraphs to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72563-190">Ruft die angegebene Untermenge von Textabsätzen ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-190">Gets the specified subset of text paragraphs.</span>
          </span>
          <span data-ttu-id="72563-191">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-191">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.TextRange2" />
        </value>
        <remarks>
          <span data-ttu-id="72563-192">
            <para>Wenn beide <paramref name="Start" /> und <paramref name="Length" /> sind nicht angegeben ist, der zurückgegebene Bereich beginnt mit dem ersten Absatz und endet mit dem letzten Absatz im angegebenen Bereich.</para>
            <para>Wenn <paramref name="Start" /> wird angegeben, aber <paramref name="Length" /> wird Length angegeben, enthält der zurückgegebene Bereich genau einen Absatz.</para>
            <para>Wenn <paramref name="Length" /> wird angegeben, aber <paramref name="Start" /> wird Length angegeben, beginnt der zurückgegebene Bereich mit dem ersten Absatz im angegebenen Bereich.</para>
            <para>Wenn <paramref name="Start" /> ist größer als die Anzahl der Absätze im angegebenen Text, der beginnt der zurückgegebene Bereich mit dem letzten Absatz im angegebenen Bereich.</para>
            <para>Wenn <paramref name="Length" /> ist größer als die Anzahl der Absätze vom angegebenen Anfangsabsatz bis zum Ende des Texts, enthält der zurückgegebene Bereich alle diese Absätze.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-192">
              <para>If both <paramref name="Start" /> and <paramref name="Length" /> are omitted, the returned range starts with the first paragraph and ends with the last paragraph in the specified range.</para>
              <para>If <paramref name="Start" /> is specified but <paramref name="Length" /> is omitted, the returned range contains one paragraph.</para>
              <para>If <paramref name="Length" /> is specified but <paramref name="Start" /> is omitted, the returned range starts with the first paragraph in the specified range.</para>
              <para>If <paramref name="Start" /> is greater than the number of paragraphs in the specified text, the returned range starts with the last paragraph in the specified range.</para>
              <para>If <paramref name="Length" /> is greater than the number of paragraphs from the specified starting paragraph to the end of the text, the returned range contains all those paragraphs.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.TextRange2.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72563-193">Ruft ab, der übergeordnete Objekt für das <see cref="T:Microsoft.Office.Core.TextRange2" /> Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-193">Gets the parent object for the <see cref="T:Microsoft.Office.Core.TextRange2" /> object.</span>
          </span>
          <span data-ttu-id="72563-194">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-194">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72563-195">
            <b>Objekt</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-195">
              <b>Object</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.TextRange2 Paste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Core.TextRange2 Paste() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.TextRange2.Paste" />
      <MemberSignature Language="VB.NET" Value="Public Function Paste () As TextRange2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Core::TextRange2 ^ Paste();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.TextRange2</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="72563-196">Fügt den Inhalt der Zwischenablage in die <see cref="T:Microsoft.Office.Core.TextRange2" /> Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-196">Pastes the contents of  the Clipboard into the <see cref="T:Microsoft.Office.Core.TextRange2" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72563-197">
            <b>TextRange2</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-197">
              <b>TextRange2</b>
            </span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteSpecial">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.TextRange2 PasteSpecial (Microsoft.Office.Core.MsoClipboardFormat Format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Core.TextRange2 PasteSpecial([in]valuetype Microsoft.Office.Core.MsoClipboardFormat Format) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.TextRange2.PasteSpecial(Microsoft.Office.Core.MsoClipboardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function PasteSpecial (Format As MsoClipboardFormat) As TextRange2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Core::TextRange2 ^ PasteSpecial(Microsoft::Office::Core::MsoClipboardFormat Format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(27)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.TextRange2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Format" Type="Microsoft.Office.Core.MsoClipboardFormat" />
      </Parameters>
      <Docs>
        <param name="Format">
          <span data-ttu-id="72563-198">Bestimmt das Format für den Inhalt der Zwischenablage, wenn dieser in das Dokument eingefügt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-198">Determines the format for the Clipboard contents when they're inserted into the document.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72563-199">Ersetzt den Textbereich durch den Inhalt der Zwischenablage im angegebenen Format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-199">Replaces the text range with the contents of the Clipboard in the format specified.</span>
          </span>
          <span data-ttu-id="72563-200">Wenn das Einfügen erfolgreich ist, gibt diese Methode ein <see cref="T:Microsoft.Office.Core.TextRange2" /> -Objekts einschließlich des Textbereichs, der eingefügt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-200">If the paste succeeds, this method returns a <see cref="T:Microsoft.Office.Core.TextRange2" /> object including the text range that was pasted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72563-201">
            <b>TextRange2</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-201">
              <b>TextRange2</b>
            </span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePeriods">
      <MemberSignature Language="C#" Value="public void RemovePeriods ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemovePeriods() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.TextRange2.RemovePeriods" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemovePeriods ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemovePeriods();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(30)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="72563-202">Entfernt alle Punkte (.) aus dem Text in der <see cref="T:Microsoft.Office.Core.TextRange2" /> Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-202">Removes all period (.) punctuation from the text in the <see cref="T:Microsoft.Office.Core.TextRange2" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.TextRange2 Replace (string FindWhat, string ReplaceWhat, int After = 0, Microsoft.Office.Core.MsoTriState MatchCase = Microsoft.Office.Core.MsoTriState.msoFalse, Microsoft.Office.Core.MsoTriState WholeWords = Microsoft.Office.Core.MsoTriState.msoFalse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Core.TextRange2 Replace([in]string FindWhat, [in]string ReplaceWhat, [in]int32 After, [in]valuetype Microsoft.Office.Core.MsoTriState MatchCase, [in]valuetype Microsoft.Office.Core.MsoTriState WholeWords) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.TextRange2.Replace(System.String,System.String,System.Int32,Microsoft.Office.Core.MsoTriState,Microsoft.Office.Core.MsoTriState)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (FindWhat As String, ReplaceWhat As String, Optional After As Integer = 0, Optional MatchCase As MsoTriState = Microsoft.Office.Core.MsoTriState.msoFalse, Optional WholeWords As MsoTriState = Microsoft.Office.Core.MsoTriState.msoFalse) As TextRange2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(32)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.TextRange2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FindWhat" Type="System.String" />
        <Parameter Name="ReplaceWhat" Type="System.String" />
        <Parameter Name="After" Type="System.Int32" />
        <Parameter Name="MatchCase" Type="Microsoft.Office.Core.MsoTriState" />
        <Parameter Name="WholeWords" Type="Microsoft.Office.Core.MsoTriState" />
      </Parameters>
      <Docs>
        <param name="FindWhat">
          <span data-ttu-id="72563-203">Der zu suchende Text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-203">The text to search for.</span>
          </span>
        </param>
        <param name="ReplaceWhat">
          <span data-ttu-id="72563-204">Der Text, durch den der gefundene Text ersetzt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-204">The text you want to replace the found text with.</span>
          </span>
        </param>
        <param name="After">
          <span data-ttu-id="72563-205">Die Position des Zeichens (in dem angegebenen Textbereich), nach dem Sie für das nächste Vorkommen des suchen möchten <paramref name="FindWhat" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-205">The position of the character (in the specified text range) after which you want to search for the next occurrence of <paramref name="FindWhat" />.</span>
          </span>
          <span data-ttu-id="72563-206">Angenommen, wenn Sie mit dem fünften Zeichen des Textbereichs suchen möchten, geben Sie 4 für <paramref name="After" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-206">For example, if you want to search from the fifth character of the text range, specify 4 for <paramref name="After" />.</span>
          </span>
          <span data-ttu-id="72563-207">Wenn dieses Argument ausgelassen wird, wird das erste Zeichen des Textbereichs als Ausgangspunkt für die Suche verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-207">If this argument is omitted, the first character of the text range is used as the starting point for the search.</span>
          </span>
        </param>
        <param name="MatchCase">
          <span data-ttu-id="72563-208">Bestimmt, ob auf der Basis von Groß-/Kleinschreibung unterschieden werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-208">Determines whether a distinction is made on the basis of case.</span>
          </span>
        </param>
        <param name="WholeWords">
          <span data-ttu-id="72563-209">Bestimmt, ob nur ganze Wörter gesucht werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-209">Determines whether only whole words are searched.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72563-210">Sucht nach bestimmten Text in einem Textbereich, ersetzt den gefundenen Text durch eine angegebene Zeichenfolge und gibt ein <see cref="T:Microsoft.Office.Core.TextRange2" /> -Objekt, das das erste Vorkommen des Suchtexts darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-210">Finds specific text in a text range, replaces the found text with a specified string, and returns a <see cref="T:Microsoft.Office.Core.TextRange2" /> object that represents the first occurrence of the found text.</span>
          </span>
          <span data-ttu-id="72563-211">Gibt <b>Nothing</b> zurück, wenn keine Übereinstimmung gefunden wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-211">Returns <b>Nothing</b> if no match is found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72563-212">
            <b>TextRange2</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-212">
              <b>TextRange2</b>
            </span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RotatedBounds">
      <MemberSignature Language="C#" Value="public void RotatedBounds (out float X1, out float Y1, out float X2, out float Y2, out float X3, out float Y3, out float x4, out float y4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RotatedBounds([out] float32&amp; X1, [out] float32&amp; Y1, [out] float32&amp; X2, [out] float32&amp; Y2, [out] float32&amp; X3, [out] float32&amp; Y3, [out] float32&amp; x4, [out] float32&amp; y4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.TextRange2.RotatedBounds(System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotatedBounds (ByRef X1 As Single, ByRef Y1 As Single, ByRef X2 As Single, ByRef Y2 As Single, ByRef X3 As Single, ByRef Y3 As Single, ByRef x4 As Single, ByRef y4 As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotatedBounds([Runtime::InteropServices::Out] float % X1, [Runtime::InteropServices::Out] float % Y1, [Runtime::InteropServices::Out] float % X2, [Runtime::InteropServices::Out] float % Y2, [Runtime::InteropServices::Out] float % X3, [Runtime::InteropServices::Out] float % Y3, [Runtime::InteropServices::Out] float % x4, [Runtime::InteropServices::Out] float % y4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(33)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="X1" Type="System.Single&amp;" RefType="out" />
        <Parameter Name="Y1" Type="System.Single&amp;" RefType="out" />
        <Parameter Name="X2" Type="System.Single&amp;" RefType="out" />
        <Parameter Name="Y2" Type="System.Single&amp;" RefType="out" />
        <Parameter Name="X3" Type="System.Single&amp;" RefType="out" />
        <Parameter Name="Y3" Type="System.Single&amp;" RefType="out" />
        <Parameter Name="x4" Type="System.Single&amp;" RefType="out" />
        <Parameter Name="y4" Type="System.Single&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="X1">
          <span data-ttu-id="72563-213">Gibt die Position (in Punkt) der X-Koordinate des ersten Scheitelpunkts des umgebenden Felds für den Text innerhalb des angegebenen Textbereichs zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-213">Returns the position (in points) of the X coordinate of the first vertex of the bounding box for the text within the specified text range.</span>
          </span>
        </param>
        <param name="Y1">
          <span data-ttu-id="72563-214">Gibt die Position (in Punkt) der Y-Koordinate des ersten Scheitelpunkts des umgebenden Felds für den Text innerhalb des angegebenen Textbereichs zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-214">Returns the position (in points) of the Y coordinate of the first vertex of the bounding box for the text within the specified text range.</span>
          </span>
        </param>
        <param name="X2">
          <span data-ttu-id="72563-215">Gibt die Position (in Punkt) der X-Koordinate des zweiten Scheitelpunkts des umgebenden Felds für den Text innerhalb des angegebenen Textbereichs zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-215">Returns the position (in points) of the X coordinate of the second vertex of the bounding box for the text within the specified text range.</span>
          </span>
        </param>
        <param name="Y2">
          <span data-ttu-id="72563-216">Gibt die Position (in Punkt) der Y-Koordinate des zweiten Scheitelpunkts des umgebenden Felds für den Text innerhalb des angegebenen Textbereichs zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-216">Returns the position (in points) of the Y coordinate of the second vertex of the bounding box for the text within the specified text range.</span>
          </span>
        </param>
        <param name="X3">
          <span data-ttu-id="72563-217">Gibt die Position (in Punkt) der X-Koordinate des dritten Scheitelpunkts des umgebenden Felds für den Text innerhalb des angegebenen Textbereichs zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-217">Returns the position (in points) of the X coordinate of the third vertex of the bounding box for the text within the specified text range.</span>
          </span>
        </param>
        <param name="Y3">
          <span data-ttu-id="72563-218">Gibt die Position (in Punkt) der Y-Koordinate des dritten Scheitelpunkts des umgebenden Felds für den Text innerhalb des angegebenen Textbereichs zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-218">Returns the position (in points) of the Y coordinate of the third vertex of the bounding box for the text within the specified text range.</span>
          </span>
        </param>
        <param name="x4">
          <span data-ttu-id="72563-219">Gibt die Position (in Punkt) der X-Koordinate des vierten Scheitelpunkts des umgebenden Felds für den Text innerhalb des angegebenen Textbereichs zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-219">Returns the position (in points) of the X coordinate of the fourth vertex of the bounding box for the text within the specified text range.</span>
          </span>
        </param>
        <param name="y4">
          <span data-ttu-id="72563-220">Gibt die Position (in Punkt) der Y-Koordinate des vierten Scheitelpunkts des umgebenden Felds für den Text innerhalb des angegebenen Textbereichs zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-220">Returns the position (in points) of the Y coordinate of the fourth vertex of the bounding box for the text within the specified text range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72563-p120">Ruft die Koordinaten der Scheitelpunkte des umgebenden Textfelds für den angegebenen Textbereich ab. Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-p120">Gets the coordinates of the vertices of the text bounding box for the specified text range. Read-only.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="72563-223">
            <para>Der Text umgebenden Feld ist nicht identisch mit der <see cref="T:Microsoft.Office.Core.TextFrame2" /> Objekt.  <b>TextFrame2</b> -Objekts stellt den Container, in dem der Text befinden kann.  Das umgebende Textfeld stellt sofort den Text umgebenden Umkreisnetzwerk.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-223">
              <para>The text bounding box is not the same as the <see cref="T:Microsoft.Office.Core.TextFrame2" /> object.  The <b>TextFrame2</b> object represents the container in which the text can reside.  The text bounding box represents the perimeter immediately surrounding the text.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RtlRun">
      <MemberSignature Language="C#" Value="public void RtlRun ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RtlRun() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.TextRange2.RtlRun" />
      <MemberSignature Language="VB.NET" Value="Public Sub RtlRun ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RtlRun();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(35)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="72563-224">Gibt eine <see cref="T:Microsoft.Office.Core.TextRange2" /> führt-Objekt, das die angegebene Untermenge von rechts-nach-links-Text darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-224">Returns a <see cref="T:Microsoft.Office.Core.TextRange2" /> object that represents the specified subset of right-to-left text runs.</span>
          </span>
          <span data-ttu-id="72563-225">Einen Textlauf besteht aus einem Bereich von Zeichen, die dieselben Schriftattribute aufweisen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-225">A text run consists of a range of characters that share the same font attributes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Runs">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.TextRange2 Runs[int Start = -1, int Length = -1] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.TextRange2 Runs(int32, int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.TextRange2.Runs(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Runs(Optional Start As Integer = -1, Optional Length As Integer = -1) As TextRange2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::TextRange2 ^ Runs[int, int] { Microsoft::Office::Core::TextRange2 ^ get(int Start, int Length); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(9)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(9)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.TextRange2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Start" Type="System.Int32" />
        <Parameter Name="Length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Start">
          <span data-ttu-id="72563-226">Der erste Textlauf des angegebenen Bereichs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-226">The first run in the returned range.</span>
          </span>
        </param>
        <param name="Length">
          <span data-ttu-id="72563-227">Die Anzahl der zurückzugebenden Textläufe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-227">The number of runs to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72563-228">Ruft ab, das die angegebene Teilmenge von Text wird ausgeführt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-228">Gets the specified subset of text runs.</span>
          </span>
          <span data-ttu-id="72563-229">Einen Textlauf besteht aus einem Bereich von Zeichen, die dieselben Schriftattribute aufweisen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-229">A text run consists of a range of characters that share the same font attributes.</span>
          </span>
          <span data-ttu-id="72563-230">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-230">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.TextRange2" />
        </value>
        <remarks>
          <span data-ttu-id="72563-231">
            <para>, Wenn sowohl Start als auch Length nicht angegeben werden, der zurückgegebene Bereich beginnt mit dem ersten Textlauf und endet mit dem letzten Absatz im angegebenen Bereich.  </para>
            <para>Wenn <paramref name="Start" /> wird angegeben, aber <paramref name="Length" /> wird Length angegeben, enthält der zurückgegebene Bereich genau einen Textlauf.</para>
            <para>Wenn <paramref name="Length" /> wird angegeben, aber <paramref name="Start" /> wird Length angegeben, beginnt der zurückgegebene Bereich mit dem ersten Lauf im angegebenen Bereich.</para>
            <para>Wenn <paramref name="Start" /> ist größer als die Anzahl der Läufe im angegebenen Text, der beginnt der zurückgegebene Bereich mit dem letzten Lauf im angegebenen Bereich.</para>
            <para>Wenn <paramref name="Length" /> ist größer als die Anzahl der Läufe vom angegebenen Anfangstextlauf bis zum Ende des Texts, enthält der zurückgegebene Bereich alle diese Textläufe.</para>
            <para>A ausführen umfasst alle Zeichen aus dem ersten Zeichen nach dem eine Schriftart zum-vorletzten Zeichen mit den gleichen Attributen Schriftart ändern. Betrachten Sie beispielsweise den folgenden Satz:</para>
            <para>dies <paramref name="italic" /> Wort ist nicht fett.</para>
            <para>Im vorhergehenden Satz die erste Ausführung besteht aus dem Wort "In" nur, wenn der Abstand nach dem Wort "This" ist nicht kursiv formatiert (wenn der Speicherplatz kursiv ist, dem ersten Lauf ist nur die ersten drei Zeichen oder "Auf Ihrer"). Entsprechend der zweite Textlauf enthält das Wort "Kursiv", nur, wenn der Abstand nach dem Wort kursiv formatiert ist.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-231">
              <para>If both Start and Length are omitted, the returned range starts with the first run and ends with the last paragraph in the specified range.  </para>
              <para>If <paramref name="Start" /> is specified but <paramref name="Length" /> is omitted, the returned range contains one run.</para>
              <para>If <paramref name="Length" /> is specified but <paramref name="Start" /> is omitted, the returned range starts with the first run in the specified range.</para>
              <para>If <paramref name="Start" /> is greater than the number of runs in the specified text, the returned range starts with the last run in the specified range.</para>
              <para>If <paramref name="Length" /> is greater than the number of runs from the specified starting run to the end of the text, the returned range contains all those runs.</para>
              <para>A run consists of all characters from the first character after a font change to the second-to-last character with the same font attributes. For example, consider the following sentence:</para>
              <para>This <paramref name="italic" /> word is not bold.</para>
              <para>In the preceding sentence, the first run consists of the word "This" only if the space after the word "This" isn't formatted as italic (if the space is italic, the first run is only the first three characters, or "Thi"). Likewise, the second run contains the word "italic" only if the space after the word is formatted as italic.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.TextRange2.Select" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(22)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="72563-232">Wählt die <see cref="T:Microsoft.Office.Core.TextRange2" /> Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-232">Selects the <see cref="T:Microsoft.Office.Core.TextRange2" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sentences">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.TextRange2 Sentences[int Start = -1, int Length = -1] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.TextRange2 Sentences(int32, int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.TextRange2.Sentences(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sentences(Optional Start As Integer = -1, Optional Length As Integer = -1) As TextRange2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::TextRange2 ^ Sentences[int, int] { Microsoft::Office::Core::TextRange2 ^ get(int Start, int Length); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(5)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.TextRange2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Start" Type="System.Int32" />
        <Parameter Name="Length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Start">
          <span data-ttu-id="72563-233">Der erste Satz des angegebenen Bereichs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-233">The first sentence in the returned range.</span>
          </span>
        </param>
        <param name="Length">
          <span data-ttu-id="72563-234">Die Anzahl der zurückzugebenden Sätze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-234">The number of sentences to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72563-235">Gibt die angegebene Untermenge von Textsätzen zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-235">Returns the specified subset of text sentences.</span>
          </span>
          <span data-ttu-id="72563-236">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-236">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.TextRange2" />
        </value>
        <remarks>
          <span data-ttu-id="72563-237">
            <para>Wenn beide <paramref name="Start" /> und <paramref name="Length" /> sind nicht angegeben ist, der zurückgegebene Bereich beginnt mit dem ersten Satz und endet mit dem letzten Absatz im angegebenen Bereich.</para>
            <para>Wenn <paramref name="Start" /> wird angegeben, aber <paramref name="Length" /> wird Length angegeben, enthält der zurückgegebene Bereich genau einen Satz.</para>
            <para>Wenn <paramref name="Length" /> wird angegeben, aber <paramref name="Start" /> wird Length angegeben, beginnt der zurückgegebene Bereich mit dem ersten Satz im angegebenen Bereich.</para>
            <para>Wenn <paramref name="Start" /> ist größer als die Anzahl der Sätze im angegebenen Text, der beginnt der zurückgegebene Bereich mit dem letzten Satz im angegebenen Bereich.</para>
            <para>Wenn <paramref name="Length" /> ist größer als die Anzahl der Sätze vom angegebenen Anfangssatz bis zum Ende des Texts, enthält der zurückgegebene Bereich alle diese Sätze.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-237">
              <para>If both <paramref name="Start" /> and <paramref name="Length" /> are omitted, the returned range starts with the first sentence and ends with the last paragraph in the specified range.</para>
              <para>If <paramref name="Start" /> is specified but <paramref name="Length" /> is omitted, the returned range contains one sentence.</para>
              <para>If <paramref name="Length" /> is specified but <paramref name="Start" /> is omitted, the returned range starts with the first sentence in the specified range.</para>
              <para>If <paramref name="Start" /> is greater than the number of sentences in the specified text, the returned range starts with the last sentence in the specified range.</para>
              <para>If <paramref name="Length" /> is greater than the number of sentences from the specified starting sentence to the end of the text, the returned range contains all those sentences.</para>
              <para />
            </span>
          </span>
        </remarks>
        <example>
          <span data-ttu-id="72563-238">
            <para>In diesem Beispiel wird den zweiten Satz des zweiten Absatzes in Form 2 in Folie 1 der aktiven PowerPoint-Präsentation fett formatiert.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-238">
              <para>This example formats as bold the second sentence in the second paragraph in shape two on slide one in the active PowerPoint presentation.  </para>
            </span>
          </span>
        </example>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public int Start { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Start" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.TextRange2.Start" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Start As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Start { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(13)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(13)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72563-239">Ruft den Anfangspunkt des angegebenen Textbereichs an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-239">Gets the starting point of the specified text range.</span>
          </span>
          <span data-ttu-id="72563-240">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-240">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72563-241">
            <b>Integer</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-241">
              <b>Integer</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string this { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.TextRange2.Text" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72563-p125">Ruft ab oder legt einen <b>String</b> -Wert, der den Text in einem Textbereich darstellt. Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-p125">Gets or sets a <b>String</b> value that represents the text in a text range. Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72563-244">
            <b>String</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-244">
              <b>String</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimText">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.TextRange2 TrimText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Core.TextRange2 TrimText() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.TextRange2.TrimText" />
      <MemberSignature Language="VB.NET" Value="Public Function TrimText () As TextRange2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Core::TextRange2 ^ TrimText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(18)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.TextRange2</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="72563-245">Gibt den angegebenen Text ohne die nachstehenden Leerzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-245">Returns the specified text minus any trailing spaces.</span>
          </span>
        </summary>
        <returns>
          <see cref="T:Microsoft.Office.Core.TextRange2" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Words">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.TextRange2 Words[int Start = -1, int Length = -1] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.TextRange2 Words(int32, int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.TextRange2.Words(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Words(Optional Start As Integer = -1, Optional Length As Integer = -1) As TextRange2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::TextRange2 ^ Words[int, int] { Microsoft::Office::Core::TextRange2 ^ get(int Start, int Length); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.TextRange2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Start" Type="System.Int32" />
        <Parameter Name="Length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Start">
          <span data-ttu-id="72563-246">Das erste Wort im zurückgegebenen Bereich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-246">The first word in the returned range.</span>
          </span>
        </param>
        <param name="Length">
          <span data-ttu-id="72563-247">Die Anzahl der zurückzugebenden Wörter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-247">The number of words to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72563-248">Ruft ab, das die angegebene Untermenge von Textwörtern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-248">Gets the specified subset of text words.</span>
          </span>
          <span data-ttu-id="72563-249">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-249">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.TextRange2" />
        </value>
        <remarks>
          <span data-ttu-id="72563-250">
            <para>Wenn beide <paramref name="Start" /> und <paramref name="Length" /> sind nicht angegeben ist, der zurückgegebene Bereich beginnt mit dem ersten Wort und endet mit dem letzten Absatz im angegebenen Bereich.</para>
            <para>Wenn <paramref name="Start" /> wird angegeben, aber <paramref name="Length" /> wird Length angegeben, enthält der zurückgegebene Bereich genau ein Wort.</para>
            <para>Wenn <paramref name="Length" /> wird angegeben, aber <paramref name="Start" /> wird Length angegeben, beginnt der zurückgegebene Bereich mit dem ersten Wort im angegebenen Bereich.</para>
            <para>Wenn <paramref name="Start" /> ist größer als die Anzahl der Wörter im angegebenen Text, der beginnt der zurückgegebene Bereich mit dem letzten Wort im angegebenen Bereich.</para>
            <para>Wenn <paramref name="Length" /> ist größer als die Anzahl der Wörter vom angegebenen Starten von Word zum Ende des Texts, enthält der zurückgegebene Bereich alle diese Wörter.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="72563-250">
              <para>If both <paramref name="Start" /> and <paramref name="Length" /> are omitted, the returned range starts with the first word and ends with the last paragraph in the specified range.</para>
              <para>If <paramref name="Start" /> is specified but <paramref name="Length" /> is omitted, the returned range contains one word.</para>
              <para>If <paramref name="Length" /> is specified but <paramref name="Start" /> is omitted, the returned range starts with the first word in the specified range.</para>
              <para>If <paramref name="Start" /> is greater than the number of words in the specified text, the returned range starts with the last word in the specified range.</para>
              <para>If <paramref name="Length" /> is greater than the number of words from the specified starting word to the end of the text, the returned range contains all those words.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>